// <auto-generated />
using System;
using Capri.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capri.Database.Migrations
{
    [DbContext(typeof(CapriDbContext))]
    [Migration("20200110212030_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capri.Database.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FacultyId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Courses");

                    b.HasData(
                        new { Id = new Guid("c0a1ca26-c845-4273-98f1-96953d35e5b2"), FacultyId = new Guid("3729f2b3-8367-4c5b-b590-bb6c66f9810c"), Name = "Architektura" },
                        new { Id = new Guid("ae6f767c-e60d-4e02-b3b4-26f0fcf1393a"), FacultyId = new Guid("3729f2b3-8367-4c5b-b590-bb6c66f9810c"), Name = "Architektura Wnętrz" },
                        new { Id = new Guid("21c3130e-3b69-4fb6-95e8-cf97ce610b11"), FacultyId = new Guid("9a6f99c5-c9ca-4b3a-b1bd-58217ba50a24"), Name = "Budownictwo" },
                        new { Id = new Guid("eb16be13-a3ae-4ca7-92a9-eeb2b57100c8"), FacultyId = new Guid("9a6f99c5-c9ca-4b3a-b1bd-58217ba50a24"), Name = "Inżynieria Środowiska" },
                        new { Id = new Guid("3f491b1c-edbc-4d8a-8246-9f6c562588d0"), FacultyId = new Guid("198078da-336b-438a-a5ab-991571891940"), Name = "Inżynieria Biomedyczna" },
                        new { Id = new Guid("a94ab98b-c35c-4482-89d2-19b9ed3c8205"), FacultyId = new Guid("198078da-336b-438a-a5ab-991571891940"), Name = "Inżynieria Materiałowa" },
                        new { Id = new Guid("55eeb1c2-5a0e-4d9e-b7d0-62d687da8575"), FacultyId = new Guid("198078da-336b-438a-a5ab-991571891940"), Name = "Mechanika i Budowa Maszyn" },
                        new { Id = new Guid("3f16222f-675f-477a-9ecf-e3a17c9ceef1"), FacultyId = new Guid("198078da-336b-438a-a5ab-991571891940"), Name = "Mechatronika" },
                        new { Id = new Guid("21207478-c248-4cd5-b94e-d47271ddb7e8"), FacultyId = new Guid("198078da-336b-438a-a5ab-991571891940"), Name = "Zarządzanie i Inżynieria Produkcji" },
                        new { Id = new Guid("6c2d290e-8277-4278-ad5b-2c2214e6f42f"), FacultyId = new Guid("341010e4-698e-4312-b8b6-30c21ae386e2"), Name = "Elektronika i Telekomunikacja" },
                        new { Id = new Guid("5036883a-2e77-4121-b863-f95de727e092"), FacultyId = new Guid("341010e4-698e-4312-b8b6-30c21ae386e2"), Name = "Teleinformatyka" },
                        new { Id = new Guid("5ba21951-0279-4ed2-9466-7b998922cdc5"), FacultyId = new Guid("e03c3ad2-317a-4038-b23e-ac8f768f599b"), Name = "Automatyka i Robotyka" },
                        new { Id = new Guid("b715e070-9fc9-42b2-8728-8db86d83fb2a"), FacultyId = new Guid("e03c3ad2-317a-4038-b23e-ac8f768f599b"), Name = "Elektrotechnika" },
                        new { Id = new Guid("2a512117-1ef2-42e5-ba65-8bcd62a51b77"), FacultyId = new Guid("e03c3ad2-317a-4038-b23e-ac8f768f599b"), Name = "Energetyka" },
                        new { Id = new Guid("958de599-f245-4af9-b9c9-53f010ffaed9"), FacultyId = new Guid("e03c3ad2-317a-4038-b23e-ac8f768f599b"), Name = "Matematyka w Technice" },
                        new { Id = new Guid("6035e82e-151b-440e-89c6-6844ca62a8ad"), FacultyId = new Guid("6c3f36f5-b1a8-4d1f-a799-843cef1d3c17"), Name = "Edukacja Techniczno-Informatyczna" },
                        new { Id = new Guid("602953b4-09b1-4369-b2e4-b70be1111b3d"), FacultyId = new Guid("6c3f36f5-b1a8-4d1f-a799-843cef1d3c17"), Name = "Fizyka Techniczna" },
                        new { Id = new Guid("fbc1c88c-5f51-47e8-a463-4e5d47834132"), FacultyId = new Guid("6c2aff77-2a73-462a-8ab1-649c834d2639"), Name = "Informatyka" },
                        new { Id = new Guid("2584a6f0-6fa6-42c9-ac61-362bc183e7a6"), FacultyId = new Guid("6c2aff77-2a73-462a-8ab1-649c834d2639"), Name = "Bioinformatyka" },
                        new { Id = new Guid("33eb4787-7bec-4666-bafe-b2a09b69a9f6"), FacultyId = new Guid("6c2aff77-2a73-462a-8ab1-649c834d2639"), Name = "Sztuczna Inteligencja / Artificial Intelligence" },
                        new { Id = new Guid("f9c12316-7a56-4d0a-aa3d-e44ef29787e3"), FacultyId = new Guid("f3627f7f-cbd8-42f4-8535-826218ece4c5"), Name = "Konstrukcja i Eksploatacja Środków Transportu" },
                        new { Id = new Guid("a8264b7c-9ac4-468a-8601-87b2d7167a31"), FacultyId = new Guid("f3627f7f-cbd8-42f4-8535-826218ece4c5"), Name = "Transport" },
                        new { Id = new Guid("b838deb6-42ca-49e1-b3c6-bced7b7645f6"), FacultyId = new Guid("f3627f7f-cbd8-42f4-8535-826218ece4c5"), Name = "Lotnictwo i Kosmonautyka" },
                        new { Id = new Guid("771e9521-49ef-48be-9bad-c124e8b0f9f1"), FacultyId = new Guid("eb266185-cea8-4b41-997a-c9ce06963a81"), Name = "Logistyka" },
                        new { Id = new Guid("6737c69b-b942-4080-933d-565a4bba99f4"), FacultyId = new Guid("eb266185-cea8-4b41-997a-c9ce06963a81"), Name = "Inżynieria Zarządzania" },
                        new { Id = new Guid("e320a018-4092-4f11-aa01-1ad9e8bda495"), FacultyId = new Guid("eb266185-cea8-4b41-997a-c9ce06963a81"), Name = "Inżynieria Bezpieczeństwa" },
                        new { Id = new Guid("54229a22-50f5-430f-acc9-705df3b5199d"), FacultyId = new Guid("9b7b573e-1949-4a96-902e-aab546934ff9"), Name = "Inżynieria Chemiczna i Procesowa" },
                        new { Id = new Guid("e9e9c57f-5b1e-4211-8c82-86b6810fa3f9"), FacultyId = new Guid("9b7b573e-1949-4a96-902e-aab546934ff9"), Name = "Technologia Chemiczna / Chemical Technology" },
                        new { Id = new Guid("913e08ba-0cc0-461b-905e-54aeaf766d2b"), FacultyId = new Guid("9b7b573e-1949-4a96-902e-aab546934ff9"), Name = "Technologie Ochrony Środowiska" },
                        new { Id = new Guid("238860f6-fdd8-477e-8f0d-cf65c0857650"), FacultyId = new Guid("9b7b573e-1949-4a96-902e-aab546934ff9"), Name = "Inżynieria Farmaceutyczna" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new { Id = new Guid("3729f2b3-8367-4c5b-b590-bb6c66f9810c"), Name = "Wydział Architektury" },
                        new { Id = new Guid("9a6f99c5-c9ca-4b3a-b1bd-58217ba50a24"), Name = "Wydział Budownictwa i Inżynierii Środowiska" },
                        new { Id = new Guid("198078da-336b-438a-a5ab-991571891940"), Name = "Wydział Budowy Maszyn i Zarządzania" },
                        new { Id = new Guid("341010e4-698e-4312-b8b6-30c21ae386e2"), Name = "Wydział Elektroniki i Telekomunikacji" },
                        new { Id = new Guid("e03c3ad2-317a-4038-b23e-ac8f768f599b"), Name = "Wydział Elektryczny" },
                        new { Id = new Guid("6c3f36f5-b1a8-4d1f-a799-843cef1d3c17"), Name = "Wydział Fizyki Technicznej" },
                        new { Id = new Guid("6c2aff77-2a73-462a-8ab1-649c834d2639"), Name = "Wydział Informatyki" },
                        new { Id = new Guid("f3627f7f-cbd8-42f4-8535-826218ece4c5"), Name = "Wydział Inżynierii Transportu" },
                        new { Id = new Guid("eb266185-cea8-4b41-997a-c9ce06963a81"), Name = "Wydział Inżynierii Zarządzania" },
                        new { Id = new Guid("9b7b573e-1949-4a96-902e-aab546934ff9"), Name = "Wydział Technologii Chemicznej" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = new Guid("e940d81a-e99c-4993-8599-2ab6b96ac03a"), ConcurrencyStamp = "985ca6b5-e9f2-4cc1-ac65-5bd0341aab76", Name = "dean", NormalizedName = "dean" },
                        new { Id = new Guid("6af5453c-40ce-43d8-96bd-1afa9dd7455e"), ConcurrencyStamp = "ec8afe79-6fd0-40a6-b49f-1ab3fdf350bc", Name = "student", NormalizedName = "student" },
                        new { Id = new Guid("3bdcfad1-db72-4cb9-a40c-c1eacaab9203"), ConcurrencyStamp = "6940a73b-3c8e-42bb-a4c8-6e3ce5d01489", Name = "promoter", NormalizedName = "promoter" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new { Id = new Guid("9c350304-8924-4d91-92e4-322fe3e941e1"), RoleId = new Guid("e940d81a-e99c-4993-8599-2ab6b96ac03a"), UserId = new Guid("bda570c4-cf26-4dde-a04f-09bc2b1ef32c") },
                        new { Id = new Guid("1b7db9a5-adee-45b5-994e-609f722ba5d8"), RoleId = new Guid("e940d81a-e99c-4993-8599-2ab6b96ac03a"), UserId = new Guid("86cd3aef-37c2-4dbe-bb87-e2aaa7aceca8") },
                        new { Id = new Guid("428f87d5-4b3f-46cf-a11f-caf87e58c891"), RoleId = new Guid("e940d81a-e99c-4993-8599-2ab6b96ac03a"), UserId = new Guid("5d1a46b4-a05a-4148-b033-fda7edc1834e") },
                        new { Id = new Guid("f015418a-c497-4e4e-9c85-0732bed3b7f6"), RoleId = new Guid("e940d81a-e99c-4993-8599-2ab6b96ac03a"), UserId = new Guid("c7eed095-d0c0-45e0-87da-0a2962644f22") },
                        new { Id = new Guid("561c8bc9-0729-414a-b2eb-6957b4cbed00"), RoleId = new Guid("6af5453c-40ce-43d8-96bd-1afa9dd7455e"), UserId = new Guid("1ab53b74-f078-4deb-9441-48056a75ff95") },
                        new { Id = new Guid("c8190010-daf7-4715-b083-5b5fa04b8662"), RoleId = new Guid("6af5453c-40ce-43d8-96bd-1afa9dd7455e"), UserId = new Guid("a83a46d0-376e-4979-a0df-e9bb80cbf1fe") },
                        new { Id = new Guid("305bb157-b44d-40ff-a5c0-9cce54d00b87"), RoleId = new Guid("6af5453c-40ce-43d8-96bd-1afa9dd7455e"), UserId = new Guid("df78265f-0a76-49b6-a40a-921b173157d0") },
                        new { Id = new Guid("f29c0585-5d31-47d0-a5d0-8e6aa7f039d0"), RoleId = new Guid("6af5453c-40ce-43d8-96bd-1afa9dd7455e"), UserId = new Guid("da6ef588-2cfc-47a3-8352-f83559d04eff") },
                        new { Id = new Guid("3ecb764a-d160-4b9a-839b-4b197f5ea61b"), RoleId = new Guid("3bdcfad1-db72-4cb9-a40c-c1eacaab9203"), UserId = new Guid("66976584-d86c-476a-9353-96c8a9222b33") },
                        new { Id = new Guid("c5037265-e9ba-4bbf-8b95-bc024f411aa6"), RoleId = new Guid("3bdcfad1-db72-4cb9-a40c-c1eacaab9203"), UserId = new Guid("99f25318-9195-4df2-b26b-b12921f5a63b") },
                        new { Id = new Guid("ef5648ad-a1b2-4925-a62c-bd0f98d69d54"), RoleId = new Guid("3bdcfad1-db72-4cb9-a40c-c1eacaab9203"), UserId = new Guid("8848e0ae-2d8f-4361-825f-55055fcc4a02") },
                        new { Id = new Guid("13dc299e-df4a-46a8-b720-ee6dc6a3abae"), RoleId = new Guid("3bdcfad1-db72-4cb9-a40c-c1eacaab9203"), UserId = new Guid("321eb935-1862-4623-9c6f-d8651e4574bf") },
                        new { Id = new Guid("218f1ea0-a734-4b26-a204-40e45be39374"), RoleId = new Guid("3bdcfad1-db72-4cb9-a40c-c1eacaab9203"), UserId = new Guid("58c476f3-c964-41af-a461-44a89f3c2004") },
                        new { Id = new Guid("02517e04-c2da-40c2-bb62-75835c059afc"), RoleId = new Guid("3bdcfad1-db72-4cb9-a40c-c1eacaab9203"), UserId = new Guid("f1de9f8f-632a-4ce1-b153-e715a2c74bd6") },
                        new { Id = new Guid("b251c823-66a1-48bc-8d5a-df5f29f821cd"), RoleId = new Guid("3bdcfad1-db72-4cb9-a40c-c1eacaab9203"), UserId = new Guid("6b78dd14-1e94-4a43-b79a-0329c798e393") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("bda570c4-cf26-4dde-a04f-09bc2b1ef32c"), AccessFailedCount = 0, ConcurrencyStamp = "cdc1eb7f-9eb2-4965-92be-5e254ca9ad00", Email = "dean1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN1@GMAIL.COM", NormalizedUserName = "DEAN1@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEAbSAzmGT0JhOKu+jnZqqmgSxGkrqhG0B7uYR8LDVg2JnGG4bzWlfIwUfwzPaZ/FRQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean1@gmail.com" },
                        new { Id = new Guid("86cd3aef-37c2-4dbe-bb87-e2aaa7aceca8"), AccessFailedCount = 0, ConcurrencyStamp = "daa50a3c-a3ed-42d2-810f-78b6bb3ab0eb", Email = "dean2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN2@GMAIL.COM", NormalizedUserName = "DEAN2@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEDoii0LnITQKFP5TlrD501OR7ik3Ix9dd6qsy/AiftnQ9FslKm0TZBHX4ZHjWs+4Hg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean2@gmail.com" },
                        new { Id = new Guid("5d1a46b4-a05a-4148-b033-fda7edc1834e"), AccessFailedCount = 0, ConcurrencyStamp = "1db485ba-d983-4d07-b4e6-629502f61f40", Email = "dean3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN3@GMAIL.COM", NormalizedUserName = "DEAN3@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEKVcJyT5/kpJqBcldSDsyXC60kAtbUba439DiZ6SO+RzmOPZhfTkC4Sljk3Uo4cvMA==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean3@gmail.com" },
                        new { Id = new Guid("c7eed095-d0c0-45e0-87da-0a2962644f22"), AccessFailedCount = 0, ConcurrencyStamp = "8df0b5ff-a2ab-4ede-ab74-221484dfb28a", Email = "dean4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN4@GMAIL.COM", NormalizedUserName = "DEAN4@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAECsRuH9EHm0Qd++7RWkIjpRZUlorAU0HeE7lG9PbYW1hTK/jWuBUH4PpZoVpWqj/lw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean4@gmail.com" },
                        new { Id = new Guid("1ab53b74-f078-4deb-9441-48056a75ff95"), AccessFailedCount = 0, ConcurrencyStamp = "4844bfc3-a598-40c0-a690-f6b927cc44fa", Email = "student1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT1@GMAIL.COM", NormalizedUserName = "STUDENT1@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEB3ajqdhWs6mAB3jA6qwU5hYjxF/b9cGHmfKmc26UTK8pjHhT8t8Lca4v0zoDo/YOw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student1@gmail.com" },
                        new { Id = new Guid("a83a46d0-376e-4979-a0df-e9bb80cbf1fe"), AccessFailedCount = 0, ConcurrencyStamp = "35a909f6-e110-49d0-a065-3a1d9f38037a", Email = "student2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT2@GMAIL.COM", NormalizedUserName = "STUDENT2@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEGDLbgFQaKJV3NnWzTpWTn84kuDEuWHZwhX5Yt5uup1AlsbbRVjHNZElWfS8dfHFpg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student2@gmail.com" },
                        new { Id = new Guid("df78265f-0a76-49b6-a40a-921b173157d0"), AccessFailedCount = 0, ConcurrencyStamp = "fa62402e-9cdc-4210-9fd0-fc3e357ba62f", Email = "student3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT3@GMAIL.COM", NormalizedUserName = "STUDENT3@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEN96jdwkiFnSvAF4xLW2+9mHpm4F1dIEZcQ5nFw2naHzIxZWsnZp30F8ikHm7rbpkQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student3@gmail.com" },
                        new { Id = new Guid("da6ef588-2cfc-47a3-8352-f83559d04eff"), AccessFailedCount = 0, ConcurrencyStamp = "3e42f0a4-20b1-4974-aa9b-e7a31b865bc2", Email = "student4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT4@GMAIL.COM", NormalizedUserName = "STUDENT4@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEDNwfIeQ3fXBfXA6hIe/1kPUcVtT+IzmXLYc2u7atFKlAdYwAo+rRtIO/ucA3Ynong==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student4@gmail.com" },
                        new { Id = new Guid("66976584-d86c-476a-9353-96c8a9222b33"), AccessFailedCount = 0, ConcurrencyStamp = "79676950-b35c-421c-9e57-889dc63eb920", Email = "irmina.maslowska@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "IRMINA.MASLOWSKA@PUT.POZNAN.PL", NormalizedUserName = "IRMINA.MASLOWSKA@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAELKeiq0mazcZwWUxmf+x4hw6hQVp+nmfwABLzBlRX3sIcCWK9HZFvogjUAGtKjL4Ow==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "irmina.maslowska@put.poznan.pl" },
                        new { Id = new Guid("99f25318-9195-4df2-b26b-b12921f5a63b"), AccessFailedCount = 0, ConcurrencyStamp = "0ef8dfed-21c5-44fc-8945-bbc7653cf98c", Email = "bartlomiej.predki@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "BARTLOMIEJ.PREDKI@PUT.POZNAN.PL", NormalizedUserName = "BARTLOMIEJ.PREDKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEFvCQN63YJk7iFaCaqOm53hTpPYWvKVemfa8A127b/dFK6AJXBlkLM4QkWemcAFOsQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "bartlomiej.predki@put.poznan.pl" },
                        new { Id = new Guid("8848e0ae-2d8f-4361-825f-55055fcc4a02"), AccessFailedCount = 0, ConcurrencyStamp = "65ebea97-6274-44f7-b2fc-89d7cf68e67c", Email = "milosz.kadzinski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "MILOSZ.KADZINSKI@PUT.POZNAN.PL", NormalizedUserName = "MILOSZ.KADZINSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEMDO02RFVS10V2epT07++nRHRAosig7ld10sQUJEEIMS3GyYZjkKga6YbwzPGB+CJw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "milosz.kadzinski@put.poznan.pl" },
                        new { Id = new Guid("321eb935-1862-4623-9c6f-d8651e4574bf"), AccessFailedCount = 0, ConcurrencyStamp = "5b0cac2a-a0fd-4b63-bc6b-079032913be7", Email = "wojciech.kotlowski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "WOJCIECH.KOTLOWSKI@PUT.POZNAN.PL", NormalizedUserName = "WOJCIECH.KOTLOWSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEKGqFUdGnRAG+yqJOCGblki5ZQ+OrdZCJ8zX4ydi0fL9qPPzQMrU+8FSfgI7MC5wRQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "wojciech.kotlowski@put.poznan.pl" },
                        new { Id = new Guid("58c476f3-c964-41af-a461-44a89f3c2004"), AccessFailedCount = 0, ConcurrencyStamp = "b36803fe-8ea8-42aa-bfa8-b3cb132f4ae8", Email = "jerzy.nawrocki@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "JERZY.NAWROCKI@PUT.POZNAN.PL", NormalizedUserName = "JERZY.NAWROCKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEFFU2Pmnf9TEOaUnqiHcNnCYMc9MK7OD2wLnRx15OluoZb+lwYoHBbgpnbzQfHFY2w==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "jerzy.nawrocki@put.poznan.pl" },
                        new { Id = new Guid("f1de9f8f-632a-4ce1-b153-e715a2c74bd6"), AccessFailedCount = 0, ConcurrencyStamp = "326d8109-e502-4251-a03b-965fcf9034ce", Email = "katarzyna.adamska@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "KATARZYNA.ADAMSKA@PUT.POZNAN.PL", NormalizedUserName = "KATARZYNA.ADAMSKA@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEG9hYnL1A3QCg7JskF5UkWSMQ/lfkRLgw3bu4u7V8lvuXFtdGScTIqAK2hi2BIiI9A==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "katarzyna.adamska@put.poznan.pl" },
                        new { Id = new Guid("6b78dd14-1e94-4a43-b79a-0329c798e393"), AccessFailedCount = 0, ConcurrencyStamp = "5790aebb-ebe0-463c-b854-c5f577a038a0", Email = "krzysztof.alejski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "KRZYSZTOF.ALEJSKI@PUT.POZNAN.PL", NormalizedUserName = "KRZYSZTOF.ALEJSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEEVwMN/sxSFfKyACh/qhorhc4FgD6XVhOfBCcGZdAdPUZOytQZFhZvkdmQiG4ogzzQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "krzysztof.alejski@put.poznan.pl" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Institute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Institutes");

                    b.HasData(
                        new { Id = new Guid("13caf514-8176-4479-9f36-f10127261604"), Name = "Instytut Informatyki" },
                        new { Id = new Guid("85c63a5c-e3f2-4d4c-83e4-a4a1835a80da"), Name = "Instytut Technologii Mechanicznej" },
                        new { Id = new Guid("279b3099-04d0-4ed8-aae0-440079d301b6"), Name = "Instytut Matematyki" },
                        new { Id = new Guid("9c4ba1c7-84b3-46de-bb98-0cdaeecde7bc"), Name = "Instytut Technologii Materiałów" },
                        new { Id = new Guid("c0a4cb31-39f1-4f5a-983e-79c35cf04488"), Name = "Instytut Inżynierii Lądowej" },
                        new { Id = new Guid("0c723f61-ddeb-4645-8207-c65def822a03"), Name = "Instytut Inżynierii Środowiska" },
                        new { Id = new Guid("83ad74a8-277e-4f2d-bf6a-5d788f00c178"), Name = "Instytut Chemii i Elektrochemii Technicznej" },
                        new { Id = new Guid("9f4cf27e-5acc-4d99-956c-add600aeb413"), Name = "Instytut Elektrotechniki i Elektroniki Przemysłowej" },
                        new { Id = new Guid("57030cd1-99f7-4c51-bbad-bc8838591785"), Name = "Instytut Mechaniki Stosowanej" },
                        new { Id = new Guid("c8f78cb6-8853-4fdf-87b0-d45207631979"), Name = "Instytut Technologii i Inżynierii Chemicznej" },
                        new { Id = new Guid("2266f42b-2f19-4a49-bd93-daf9b891d9c5"), Name = "Instytut Architektury i Planowania Przestrzennego" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ExpectedNumberOfBachelorProposals");

                    b.Property<int>("ExpectedNumberOfMasterProposals");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("InstituteId");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("TitlePostfix");

                    b.Property<string>("TitlePrefix")
                        .IsRequired();

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("UserId");

                    b.ToTable("Promoters");

                    b.HasData(
                        new { Id = new Guid("2a21d8e5-575a-41d9-99ed-fbb5c06a3db9"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Irmina", InstituteId = new Guid("13caf514-8176-4479-9f36-f10127261604"), LastName = "Masłowska", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("66976584-d86c-476a-9353-96c8a9222b33") },
                        new { Id = new Guid("d979fc9c-94d3-419a-a4e9-014e5664b73c"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Bartłomiej", InstituteId = new Guid("13caf514-8176-4479-9f36-f10127261604"), LastName = "Prędki", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("99f25318-9195-4df2-b26b-b12921f5a63b") },
                        new { Id = new Guid("4ae4e691-dcff-4236-94ca-c97c102bc66c"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Miłosz", InstituteId = new Guid("13caf514-8176-4479-9f36-f10127261604"), LastName = "Kadziński", TitlePostfix = "", TitlePrefix = "dr hab. inż.", UserId = new Guid("8848e0ae-2d8f-4361-825f-55055fcc4a02") },
                        new { Id = new Guid("9aabdabd-8d1b-4c38-a2d0-0f88dca17533"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Wojciech", InstituteId = new Guid("13caf514-8176-4479-9f36-f10127261604"), LastName = "Kotłowski", TitlePostfix = "", TitlePrefix = "dr hab. inż.", UserId = new Guid("321eb935-1862-4623-9c6f-d8651e4574bf") },
                        new { Id = new Guid("48aea09b-4be3-4372-88bc-d46d78a1552b"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Jerzy", InstituteId = new Guid("13caf514-8176-4479-9f36-f10127261604"), LastName = "Nawrocki", TitlePostfix = "prof. PP", TitlePrefix = "dr hab inż.", UserId = new Guid("58c476f3-c964-41af-a461-44a89f3c2004") },
                        new { Id = new Guid("fb23704f-cec8-48fb-aa79-f3bd0e7e293b"), ExpectedNumberOfBachelorProposals = 1, ExpectedNumberOfMasterProposals = 1, FirstName = "Katarzyna", InstituteId = new Guid("c8f78cb6-8853-4fdf-87b0-d45207631979"), LastName = "Adamska", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("f1de9f8f-632a-4ce1-b153-e715a2c74bd6") },
                        new { Id = new Guid("7345a41b-36aa-4ae2-b0fe-b7bb4279603b"), ExpectedNumberOfBachelorProposals = 3, ExpectedNumberOfMasterProposals = 2, FirstName = "Krzysztof", InstituteId = new Guid("c8f78cb6-8853-4fdf-87b0-d45207631979"), LastName = "Alejski", TitlePostfix = "prof. PP", TitlePrefix = "dr hab. inż.", UserId = new Guid("6b78dd14-1e94-4a43-b79a-0329c798e393") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CourseId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Level");

                    b.Property<int>("MaxNumberOfStudents");

                    b.Property<int>("Mode");

                    b.Property<string>("OutputData");

                    b.Property<Guid>("PromoterId");

                    b.Property<string>("Specialization");

                    b.Property<DateTime>("StartingDate");

                    b.Property<int>("Status");

                    b.Property<int>("StudyProfile");

                    b.Property<string>("TopicEnglish")
                        .IsRequired();

                    b.Property<string>("TopicPolish")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PromoterId");

                    b.ToTable("Proposals");

                    b.HasData(
                        new { Id = new Guid("243a9b49-a0a5-4622-9b55-e2cf44410cac"), CourseId = new Guid("fbc1c88c-5f51-47e8-a463-4e5d47834132"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("48aea09b-4be3-4372-88bc-d46d78a1552b"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Capri 2 - system for managing diploma topic cards", TopicPolish = "Capri 2 - system do zarządzania kartami tematów prac dyplomowych" },
                        new { Id = new Guid("ca7e673f-eb16-48eb-9038-0f1b7148937d"), CourseId = new Guid("fbc1c88c-5f51-47e8-a463-4e5d47834132"), Description = "Celem pracy jest zaimplementowanie metod Electre 1s i Electre TRI jako aplikacji desktopowych.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("2a21d8e5-575a-41d9-99ed-fbb5c06a3db9"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Implementation of chosen methods from Electre family", TopicPolish = "Implementacja wybranych metod z rodziny Electre" },
                        new { Id = new Guid("429709d0-42ae-4b69-9160-0e7e1f2edc9f"), CourseId = new Guid("fbc1c88c-5f51-47e8-a463-4e5d47834132"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("d979fc9c-94d3-419a-a4e9-014e5664b73c"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Implementation of decision support methods based on utility function (UTA, Assess)", TopicPolish = "Implementacja metod wspomagania decyzji opartych na funkcji użyteczności (UTA, Assess)" },
                        new { Id = new Guid("47288756-0acc-4b06-a324-ba6e4a640d73"), CourseId = new Guid("fbc1c88c-5f51-47e8-a463-4e5d47834132"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("4ae4e691-dcff-4236-94ca-c97c102bc66c"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Extension of diviz platform", TopicPolish = "Rozszerzenie platformy diviz o metody wielokryterialnego wspomagania decyzji oparte na różnych modelach preferencji" },
                        new { Id = new Guid("d40026df-bb61-4596-90ba-8f5f8e987337"), CourseId = new Guid("fbc1c88c-5f51-47e8-a463-4e5d47834132"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("9aabdabd-8d1b-4c38-a2d0-0f88dca17533"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Style transfering using a neural network", TopicPolish = "Transfer stylu przy użyciu sieci neuronowej" },
                        new { Id = new Guid("cb9c21e5-4ae1-4268-bc1f-7b7e49b20ea6"), CourseId = new Guid("54229a22-50f5-430f-acc9-705df3b5199d"), Description = "Praca będzie polegać na własnoręcznym upakowaniu kolumny chromatograficznej, doborze odpowiednich warunków pomiaru w celu wyznaczenia podstawowych parametrów dla niestandardowych kolumn do HPLC.", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("fb23704f-cec8-48fb-aa79-f3bd0e7e293b"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "No title", TopicPolish = "Wyznaczenie parametrów kolumny chromatograficznej za pomocą odwróconej chromatografii cieczowej" },
                        new { Id = new Guid("13a063d5-91b0-48cb-9ea2-6924067a2174"), CourseId = new Guid("54229a22-50f5-430f-acc9-705df3b5199d"), Description = "Brak opisu", Level = 1, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("7345a41b-36aa-4ae2-b0fe-b7bb4279603b"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "No title", TopicPolish = "Analiza i projektowanie procesów wydzielania produktów otrzymywanych w procesie biokonwersji surowców odnawialnych" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ProposalId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new { Id = new Guid("ad3064ea-291d-4b45-8a53-6c5b1f34036d"), UserId = new Guid("1ab53b74-f078-4deb-9441-48056a75ff95") },
                        new { Id = new Guid("2c8ff37e-512c-4a1a-ad90-bd9a4572d07b"), UserId = new Guid("a83a46d0-376e-4979-a0df-e9bb80cbf1fe") },
                        new { Id = new Guid("0c9746f7-9424-4443-af0b-6bfe7d147ed6"), UserId = new Guid("df78265f-0a76-49b6-a40a-921b173157d0") },
                        new { Id = new Guid("fb655a49-ceb0-4b81-8862-31712513dd94"), UserId = new Guid("da6ef588-2cfc-47a3-8352-f83559d04eff") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Course", b =>
                {
                    b.HasOne("Capri.Database.Entities.Faculty", "Faculty")
                        .WithMany("Courses")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.HasOne("Capri.Database.Entities.Institute", "Institute")
                        .WithMany("Promoters")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.HasOne("Capri.Database.Entities.Course", "Course")
                        .WithMany("Proposals")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Capri.Database.Entities.Promoter", "Promoter")
                        .WithMany("Proposals")
                        .HasForeignKey("PromoterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.HasOne("Capri.Database.Entities.Proposal", "Proposal")
                        .WithMany("Students")
                        .HasForeignKey("ProposalId");

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
