// <auto-generated />
using System;
using Capri.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capri.Database.Migrations
{
    [DbContext(typeof(CapriDbContext))]
    [Migration("20190919144502_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = new Guid("63ba5516-ce32-4a60-9f09-ccb8ffeefcc3"), ConcurrencyStamp = "167e1587-283e-412e-84d5-84fcb0104a95", Name = "admin", NormalizedName = "admin" },
                        new { Id = new Guid("9d1f9621-5a09-486e-bd86-ada835b97540"), ConcurrencyStamp = "64a580a2-31a1-4103-abe1-436dc3d7ae1a", Name = "dean", NormalizedName = "dean" },
                        new { Id = new Guid("8e6c8850-5492-4754-adb7-cf27d2b54118"), ConcurrencyStamp = "5105ecf1-ae62-4b3c-b46d-017b0bd52488", Name = "student", NormalizedName = "student" },
                        new { Id = new Guid("441e8f47-4415-48bc-b9ec-373d8aeaadb9"), ConcurrencyStamp = "99ddfd52-d3d0-4fe1-89dc-8000d658a98c", Name = "promoter", NormalizedName = "promoter" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new { Id = new Guid("e9a1c4fb-25d0-467f-b443-1ddf47f61957"), RoleId = new Guid("63ba5516-ce32-4a60-9f09-ccb8ffeefcc3"), UserId = new Guid("e6a82f22-11f8-4b0c-9ab5-7cbfe38e7d04") },
                        new { Id = new Guid("cffdbbaf-0aae-41a4-9fd7-b051e521df15"), RoleId = new Guid("9d1f9621-5a09-486e-bd86-ada835b97540"), UserId = new Guid("f3400473-7ddd-4815-a765-4240fbf38a92") },
                        new { Id = new Guid("92260bd3-0b75-4d38-96b9-754160761c5d"), RoleId = new Guid("9d1f9621-5a09-486e-bd86-ada835b97540"), UserId = new Guid("1a2363fe-86ad-4ad7-9903-35ba802afef3") },
                        new { Id = new Guid("d838e11f-50e0-4889-91c3-cf52266e55c9"), RoleId = new Guid("8e6c8850-5492-4754-adb7-cf27d2b54118"), UserId = new Guid("1ee9ebd4-483b-4403-9fca-d9558ac669c3") },
                        new { Id = new Guid("850ba913-7fc7-4470-857a-536d6bb7fa74"), RoleId = new Guid("8e6c8850-5492-4754-adb7-cf27d2b54118"), UserId = new Guid("16566408-d710-4451-b234-1d1373f4be89") },
                        new { Id = new Guid("14e50931-c524-4b93-af0d-fb99d8131c6f"), RoleId = new Guid("8e6c8850-5492-4754-adb7-cf27d2b54118"), UserId = new Guid("644958e8-8909-4848-a681-260007bc3c08") },
                        new { Id = new Guid("f97a4a84-fde1-41e2-aaf6-2fe138c15077"), RoleId = new Guid("8e6c8850-5492-4754-adb7-cf27d2b54118"), UserId = new Guid("bb5effe8-b3d8-46ea-886d-27ef819a2d8f") },
                        new { Id = new Guid("2850c1b8-9c0d-4b4f-be0b-3ee9c05a9fef"), RoleId = new Guid("8e6c8850-5492-4754-adb7-cf27d2b54118"), UserId = new Guid("11b74f9d-1545-49fc-b901-a001c4819958") },
                        new { Id = new Guid("70663607-9186-4f5b-a93b-6c5802db0dde"), RoleId = new Guid("8e6c8850-5492-4754-adb7-cf27d2b54118"), UserId = new Guid("7affd49b-4170-497f-837e-7a52e72f7166") },
                        new { Id = new Guid("d45b3b32-4b50-4381-ade0-314bb7a51719"), RoleId = new Guid("8e6c8850-5492-4754-adb7-cf27d2b54118"), UserId = new Guid("77a91bc5-25f6-4fa8-8cc9-f6ceb1a8218c") },
                        new { Id = new Guid("bfe4023b-86c1-4433-8fb8-36a99c112f9d"), RoleId = new Guid("8e6c8850-5492-4754-adb7-cf27d2b54118"), UserId = new Guid("438207f9-7e92-4575-b18d-7e190b2546e7") },
                        new { Id = new Guid("dfa12f77-a4cb-4cee-bcd1-c2c97c642f48"), RoleId = new Guid("441e8f47-4415-48bc-b9ec-373d8aeaadb9"), UserId = new Guid("8447358b-d1d6-40bc-bc60-6fd54f361a26") },
                        new { Id = new Guid("6e552efc-c2c4-4f52-a3dc-92a548860000"), RoleId = new Guid("441e8f47-4415-48bc-b9ec-373d8aeaadb9"), UserId = new Guid("62688498-9e57-4d46-be80-2772f27a6b2e") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new { Id = new Guid("e6a82f22-11f8-4b0c-9ab5-7cbfe38e7d04"), AccessFailedCount = 0, ConcurrencyStamp = "5cafd65d-7593-4614-82b8-3f53bb9e0d5e", Email = "admin1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "admin1@gmail.com", NormalizedUserName = "admin1@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEEDmT5OuGpxhWnoox3av6+eHiV1b5S9GaLp5V+OogvJPNIXlzhBeDHdw2FCp13bBxA==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "admin1@gmail.com" },
                        new { Id = new Guid("f3400473-7ddd-4815-a765-4240fbf38a92"), AccessFailedCount = 0, ConcurrencyStamp = "e82f0074-a888-4e80-a821-74fcba5b2b22", Email = "dean1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "dean1@gmail.com", NormalizedUserName = "dean1@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEMHyAWibcosURXqCd2cqd6bNIACZvsNgNn3sCGXrSLb4Qf1ac7RtBnOS5uVPgPfYGg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean1@gmail.com" },
                        new { Id = new Guid("1a2363fe-86ad-4ad7-9903-35ba802afef3"), AccessFailedCount = 0, ConcurrencyStamp = "99c7f683-4887-4e76-a5dd-5ad3c381a980", Email = "dean2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "dean2@gmail.com", NormalizedUserName = "dean2@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEEAOGhTH+L9gSSVUFT7DdXooN+EvdBkIDaBi+gdnFnuqBOw464jzog/dxq2LscUmqg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean2@gmail.com" },
                        new { Id = new Guid("1ee9ebd4-483b-4403-9fca-d9558ac669c3"), AccessFailedCount = 0, ConcurrencyStamp = "5f4ff327-4330-4523-8ec6-a10d49dc6c4b", Email = "student1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student1@gmail.com", NormalizedUserName = "student1@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEPaodSOw1SfJ7sfWt//Lbhli0qwSU577dybX10cn3/2Gg71WFUlNRaREkNM+NhyQxg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student1@gmail.com" },
                        new { Id = new Guid("16566408-d710-4451-b234-1d1373f4be89"), AccessFailedCount = 0, ConcurrencyStamp = "23eaa483-3fdd-44f3-b37e-4b67c0cf6bf2", Email = "student2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student2@gmail.com", NormalizedUserName = "student2@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEPXctEzZcW9qpB64b7NcDfROw4ZyxazWtznH4nkEUIXoHAodJ2r+NDGQbbkJ0qI2VQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student2@gmail.com" },
                        new { Id = new Guid("644958e8-8909-4848-a681-260007bc3c08"), AccessFailedCount = 0, ConcurrencyStamp = "0ac8e323-99a2-45e3-b35c-1232b3f7445b", Email = "student3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student3@gmail.com", NormalizedUserName = "student3@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAENXBBNx8niqyDM+Qy2ikP0pohZ2izPgNGg7UPRhXQ+QQixvtSdQDmuiYm4x/qVJu8A==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student3@gmail.com" },
                        new { Id = new Guid("bb5effe8-b3d8-46ea-886d-27ef819a2d8f"), AccessFailedCount = 0, ConcurrencyStamp = "317ec841-7994-48ae-a8d9-0114600f1c04", Email = "student4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student4@gmail.com", NormalizedUserName = "student4@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEP3Fn4OnQ2vZ8GazaZ5ODti+IPQMSCRxqS2q/RRIc+pnGTJgYvbxr2P6CglueRdNxw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student4@gmail.com" },
                        new { Id = new Guid("11b74f9d-1545-49fc-b901-a001c4819958"), AccessFailedCount = 0, ConcurrencyStamp = "8e8a76b1-b2b5-4975-a22c-ffb5cf8c4e22", Email = "student5@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student5@gmail.com", NormalizedUserName = "student5@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAENSGEz3OToTJbck+c+By+gmDAtUrpW/V4Q5dr1qSybHdKAQvuoKq5YdXPqhlIZASsQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student5@gmail.com" },
                        new { Id = new Guid("7affd49b-4170-497f-837e-7a52e72f7166"), AccessFailedCount = 0, ConcurrencyStamp = "e74c7275-4140-47bd-ab4c-09040933f8d5", Email = "student6@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student6@gmail.com", NormalizedUserName = "student6@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEMPGm8oPPW5Mn2g9c9A0AEZROMys25tNpc7M9/U+4y2tGDguebC1mIWo7Wj/xVnlbg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student6@gmail.com" },
                        new { Id = new Guid("77a91bc5-25f6-4fa8-8cc9-f6ceb1a8218c"), AccessFailedCount = 0, ConcurrencyStamp = "e8cbc61f-bcc5-446e-9571-b41933ba5e83", Email = "student7@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student7@gmail.com", NormalizedUserName = "student7@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEBlnka+nYIfHijAmf3z5hiaLlEeSP8PM2xgObwrjCa96ewao/3g2/hmfMvcltGWejw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student7@gmail.com" },
                        new { Id = new Guid("438207f9-7e92-4575-b18d-7e190b2546e7"), AccessFailedCount = 0, ConcurrencyStamp = "c4edf95c-3cb8-41c7-961a-e20f14e425d6", Email = "student8@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student8@gmail.com", NormalizedUserName = "student8@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEAOlezAq7KyyLVNQs4skgu2Twnj1YQZerbx+/Eu+S5Fg+Z2/EMZoRK5/rb2flW8a/A==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student8@gmail.com" },
                        new { Id = new Guid("8447358b-d1d6-40bc-bc60-6fd54f361a26"), AccessFailedCount = 0, ConcurrencyStamp = "0f27959f-6e07-42a0-93a8-8c875fd1e32b", Email = "promoter1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "promoter1@gmail.com", NormalizedUserName = "promoter1@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEBtcpX17ENc5pZ1aYXuYgXrCw75SqRgks5ki6Z8AffslmvqDM+mm7rQlmbe07bMKMw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "promoter1@gmail.com" },
                        new { Id = new Guid("62688498-9e57-4d46-be80-2772f27a6b2e"), AccessFailedCount = 0, ConcurrencyStamp = "65717c1d-53cd-4ce3-9d5f-801ce369931e", Email = "promoter2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "promoter2@gmail.com", NormalizedUserName = "promoter2@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEHh3Gokjbx7umrKcF6aE11/Al1JmGjHhrNLjr1vvSYgIIt7H62W4tq82NtgxViBM9Q==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "promoter2@gmail.com" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanSubmitBachelorProposals");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Promoters");

                    b.HasData(
                        new { Id = new Guid("4d7721f7-1ebe-4107-b924-441791a700bc"), CanSubmitBachelorProposals = true, UserId = new Guid("8447358b-d1d6-40bc-bc60-6fd54f361a26") },
                        new { Id = new Guid("b618eee2-f098-4b87-9a74-78d74ead2fdc"), CanSubmitBachelorProposals = true, UserId = new Guid("62688498-9e57-4d46-be80-2772f27a6b2e") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid?>("PromoterId");

                    b.Property<int>("Status");

                    b.Property<string>("Topic")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("PromoterId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ProposalId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new { Id = new Guid("5544ea0e-9136-4cdd-9eca-f84c0311d022"), UserId = new Guid("1ee9ebd4-483b-4403-9fca-d9558ac669c3") },
                        new { Id = new Guid("e71e783c-225c-44aa-92dc-95c281e931b5"), UserId = new Guid("16566408-d710-4451-b234-1d1373f4be89") },
                        new { Id = new Guid("ae23e217-7e06-4017-896b-78b156c48352"), UserId = new Guid("644958e8-8909-4848-a681-260007bc3c08") },
                        new { Id = new Guid("49895d97-953f-4c84-b532-5b25dcee8b7b"), UserId = new Guid("bb5effe8-b3d8-46ea-886d-27ef819a2d8f") },
                        new { Id = new Guid("be612387-0a47-40b0-86bd-cbf7d5e4102b"), UserId = new Guid("11b74f9d-1545-49fc-b901-a001c4819958") },
                        new { Id = new Guid("6c64bf5b-fd96-4086-8d91-fd383b764580"), UserId = new Guid("7affd49b-4170-497f-837e-7a52e72f7166") },
                        new { Id = new Guid("76c1cde6-f096-4cc6-b522-96570ec4586f"), UserId = new Guid("77a91bc5-25f6-4fa8-8cc9-f6ceb1a8218c") },
                        new { Id = new Guid("fdcfc8aa-3166-4e2a-8086-ad355845a4e3"), UserId = new Guid("438207f9-7e92-4575-b18d-7e190b2546e7") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.HasOne("Capri.Database.Entities.Promoter")
                        .WithMany("Proposals")
                        .HasForeignKey("PromoterId");
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.HasOne("Capri.Database.Entities.Proposal")
                        .WithMany("Students")
                        .HasForeignKey("ProposalId");

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
