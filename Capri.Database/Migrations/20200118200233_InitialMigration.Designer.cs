// <auto-generated />
using System;
using Capri.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capri.Database.Migrations
{
    [DbContext(typeof(CapriDbContext))]
    [Migration("20200118200233_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capri.Database.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FacultyId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Courses");

                    b.HasData(
                        new { Id = new Guid("8706ef96-680b-4ca2-b61c-293b8316eb37"), FacultyId = new Guid("86ef5494-f5be-458e-810e-6717e029462d"), Name = "Architektura" },
                        new { Id = new Guid("c5b26ec0-7383-4dee-bcb1-641e1d75808c"), FacultyId = new Guid("86ef5494-f5be-458e-810e-6717e029462d"), Name = "Architektura Wnętrz" },
                        new { Id = new Guid("02deab5b-6bd3-437c-bd19-a663e0cc883f"), FacultyId = new Guid("5dfc5d47-1dc0-469c-a2b9-b18bb6c2b0d6"), Name = "Budownictwo" },
                        new { Id = new Guid("b81a71a1-152e-4091-ad02-ef4fb1ca2dee"), FacultyId = new Guid("5dfc5d47-1dc0-469c-a2b9-b18bb6c2b0d6"), Name = "Inżynieria Środowiska" },
                        new { Id = new Guid("2d8e61f2-3110-44ef-9cc3-58992d2c11da"), FacultyId = new Guid("0309c3f3-3c50-43b8-8e8e-4ac688975198"), Name = "Inżynieria Biomedyczna" },
                        new { Id = new Guid("841619c3-f4d1-472a-b0bb-6e31077e3391"), FacultyId = new Guid("0309c3f3-3c50-43b8-8e8e-4ac688975198"), Name = "Inżynieria Materiałowa" },
                        new { Id = new Guid("23682890-8cfe-4426-8cff-df21e2b9d70a"), FacultyId = new Guid("0309c3f3-3c50-43b8-8e8e-4ac688975198"), Name = "Mechanika i Budowa Maszyn" },
                        new { Id = new Guid("65a8f725-cb98-4588-a3fc-6530685db71f"), FacultyId = new Guid("0309c3f3-3c50-43b8-8e8e-4ac688975198"), Name = "Mechatronika" },
                        new { Id = new Guid("40491792-581f-4ecf-bb8d-691965d2f7cb"), FacultyId = new Guid("0309c3f3-3c50-43b8-8e8e-4ac688975198"), Name = "Zarządzanie i Inżynieria Produkcji" },
                        new { Id = new Guid("50fae299-6ef3-402a-9d0a-6db0913d22ab"), FacultyId = new Guid("20da3e1f-33d0-4adf-b0d9-7635d364d66e"), Name = "Elektronika i Telekomunikacja" },
                        new { Id = new Guid("b8e5fdb3-8b12-4c6c-a636-458c0ea82bb0"), FacultyId = new Guid("20da3e1f-33d0-4adf-b0d9-7635d364d66e"), Name = "Teleinformatyka" },
                        new { Id = new Guid("0fa1ef4e-d472-44ff-a7a3-07252dbe3dcc"), FacultyId = new Guid("35323056-2b0c-46f5-832e-f138d53a21c0"), Name = "Automatyka i Robotyka" },
                        new { Id = new Guid("5ca080fe-248b-49eb-ad47-c3e6f7315f2a"), FacultyId = new Guid("35323056-2b0c-46f5-832e-f138d53a21c0"), Name = "Elektrotechnika" },
                        new { Id = new Guid("574c2b79-3a49-45cc-aa7a-a8e5d04bb014"), FacultyId = new Guid("35323056-2b0c-46f5-832e-f138d53a21c0"), Name = "Energetyka" },
                        new { Id = new Guid("22fe93cb-f0a6-423d-bfba-5afc9fc3444a"), FacultyId = new Guid("35323056-2b0c-46f5-832e-f138d53a21c0"), Name = "Matematyka w Technice" },
                        new { Id = new Guid("70884a68-4f23-4426-9c11-b563d549837c"), FacultyId = new Guid("c613d91a-2c53-4d58-b50c-934368b92222"), Name = "Edukacja Techniczno-Informatyczna" },
                        new { Id = new Guid("78f607e3-625f-4837-9ff5-02724803d4c0"), FacultyId = new Guid("c613d91a-2c53-4d58-b50c-934368b92222"), Name = "Fizyka Techniczna" },
                        new { Id = new Guid("20cf1115-275d-4cc5-b931-4a03e1d8cd1e"), FacultyId = new Guid("2a115952-a7d4-41ff-b004-3dbcd6784a77"), Name = "Informatyka" },
                        new { Id = new Guid("c58ebb37-0c37-499b-98fc-06b25bb2ca3d"), FacultyId = new Guid("2a115952-a7d4-41ff-b004-3dbcd6784a77"), Name = "Bioinformatyka" },
                        new { Id = new Guid("f0ff5ec9-0a01-4ef0-8c90-4b029270c768"), FacultyId = new Guid("2a115952-a7d4-41ff-b004-3dbcd6784a77"), Name = "Sztuczna Inteligencja / Artificial Intelligence" },
                        new { Id = new Guid("fa449e55-236a-4338-bda5-5aa14a791032"), FacultyId = new Guid("bc387aa9-4bd6-4fbb-a8dc-7c934bf1e86f"), Name = "Konstrukcja i Eksploatacja Środków Transportu" },
                        new { Id = new Guid("1f207388-f813-4ea7-8087-fd59540c61b5"), FacultyId = new Guid("bc387aa9-4bd6-4fbb-a8dc-7c934bf1e86f"), Name = "Transport" },
                        new { Id = new Guid("87332169-77eb-476e-8d07-e24eaeebf46d"), FacultyId = new Guid("bc387aa9-4bd6-4fbb-a8dc-7c934bf1e86f"), Name = "Lotnictwo i Kosmonautyka" },
                        new { Id = new Guid("20863f48-4023-46c3-9f74-e0c90c301f3a"), FacultyId = new Guid("c11f638b-c64a-449b-8469-09669a040426"), Name = "Logistyka" },
                        new { Id = new Guid("3fd34819-ff74-4b75-ba1d-b93b49a6133f"), FacultyId = new Guid("c11f638b-c64a-449b-8469-09669a040426"), Name = "Inżynieria Zarządzania" },
                        new { Id = new Guid("766ab3ca-8042-458c-87c8-c551ac1c971a"), FacultyId = new Guid("c11f638b-c64a-449b-8469-09669a040426"), Name = "Inżynieria Bezpieczeństwa" },
                        new { Id = new Guid("40d9ab3a-78a5-47db-8cd6-d0adc64fec53"), FacultyId = new Guid("35359070-2a4a-4f4e-80a5-fb51392df559"), Name = "Inżynieria Chemiczna i Procesowa" },
                        new { Id = new Guid("36e4af90-a084-4c0c-b689-b809bf4f29a5"), FacultyId = new Guid("35359070-2a4a-4f4e-80a5-fb51392df559"), Name = "Technologia Chemiczna / Chemical Technology" },
                        new { Id = new Guid("55d0b3fa-6f62-4cab-881a-b5155c9133be"), FacultyId = new Guid("35359070-2a4a-4f4e-80a5-fb51392df559"), Name = "Technologie Ochrony Środowiska" },
                        new { Id = new Guid("0ad0a86f-3c16-489d-b9b4-bce6b122f11b"), FacultyId = new Guid("35359070-2a4a-4f4e-80a5-fb51392df559"), Name = "Inżynieria Farmaceutyczna" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Faculties");

                    b.HasData(
                        new { Id = new Guid("86ef5494-f5be-458e-810e-6717e029462d"), Name = "Wydział Architektury" },
                        new { Id = new Guid("5dfc5d47-1dc0-469c-a2b9-b18bb6c2b0d6"), Name = "Wydział Budownictwa i Inżynierii Środowiska" },
                        new { Id = new Guid("0309c3f3-3c50-43b8-8e8e-4ac688975198"), Name = "Wydział Budowy Maszyn i Zarządzania" },
                        new { Id = new Guid("20da3e1f-33d0-4adf-b0d9-7635d364d66e"), Name = "Wydział Elektroniki i Telekomunikacji" },
                        new { Id = new Guid("35323056-2b0c-46f5-832e-f138d53a21c0"), Name = "Wydział Elektryczny" },
                        new { Id = new Guid("c613d91a-2c53-4d58-b50c-934368b92222"), Name = "Wydział Fizyki Technicznej" },
                        new { Id = new Guid("2a115952-a7d4-41ff-b004-3dbcd6784a77"), Name = "Wydział Informatyki" },
                        new { Id = new Guid("bc387aa9-4bd6-4fbb-a8dc-7c934bf1e86f"), Name = "Wydział Inżynierii Transportu" },
                        new { Id = new Guid("c11f638b-c64a-449b-8469-09669a040426"), Name = "Wydział Inżynierii Zarządzania" },
                        new { Id = new Guid("35359070-2a4a-4f4e-80a5-fb51392df559"), Name = "Wydział Technologii Chemicznej" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = new Guid("ddf2657b-f313-4f1c-8a72-859648e3c7b8"), ConcurrencyStamp = "bc53f6cb-ee10-4174-a924-664aa2c620c1", Name = "Dean", NormalizedName = "Dean" },
                        new { Id = new Guid("a7b9b785-2981-4c90-8b8c-6d4705ffc34c"), ConcurrencyStamp = "5f90384c-9351-41fb-b642-2cd5e0fc3ab7", Name = "Student", NormalizedName = "Student" },
                        new { Id = new Guid("88e13d98-6ce6-453b-a0e8-349b30490f2d"), ConcurrencyStamp = "3f7d9c1d-0654-4857-8402-aef6825c5a64", Name = "Promoter", NormalizedName = "Promoter" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserRole", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("UserId", "RoleId");

                    b.HasAlternateKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new { UserId = new Guid("10a5da4f-5480-405b-8a3b-429cdf019059"), RoleId = new Guid("ddf2657b-f313-4f1c-8a72-859648e3c7b8"), Id = new Guid("99e6f47a-c81b-4275-937e-68878b3b001c") },
                        new { UserId = new Guid("719d1278-36c2-40c4-900e-e08be0ffe979"), RoleId = new Guid("ddf2657b-f313-4f1c-8a72-859648e3c7b8"), Id = new Guid("a68818a2-c08d-42f9-acc0-4b1a17d4760b") },
                        new { UserId = new Guid("f8a75861-cc22-4396-90c0-0376b982b497"), RoleId = new Guid("ddf2657b-f313-4f1c-8a72-859648e3c7b8"), Id = new Guid("b51180ea-8202-4ee2-9194-f65a76231b88") },
                        new { UserId = new Guid("e60007bd-4b69-42c8-a1f7-dbb1a261f839"), RoleId = new Guid("ddf2657b-f313-4f1c-8a72-859648e3c7b8"), Id = new Guid("27920de9-9141-4446-9c96-09713fdc096d") },
                        new { UserId = new Guid("f09a9d3c-0ac0-464f-8407-6eb7c7218681"), RoleId = new Guid("a7b9b785-2981-4c90-8b8c-6d4705ffc34c"), Id = new Guid("9c046456-e42c-4682-b68d-749f3e57c926") },
                        new { UserId = new Guid("604cae1d-e388-4284-85bf-19bd61d6cf66"), RoleId = new Guid("a7b9b785-2981-4c90-8b8c-6d4705ffc34c"), Id = new Guid("e8c00f2c-98dc-4616-aa74-1b9db623ba39") },
                        new { UserId = new Guid("754cfe79-028d-4d79-a44f-20567d418aa7"), RoleId = new Guid("a7b9b785-2981-4c90-8b8c-6d4705ffc34c"), Id = new Guid("c5e62d75-d6bc-400e-8208-4719fabf2b42") },
                        new { UserId = new Guid("cc234eb6-a1e6-452a-9bed-67d9ce984269"), RoleId = new Guid("a7b9b785-2981-4c90-8b8c-6d4705ffc34c"), Id = new Guid("3fb47560-7a4d-4760-abf6-d2a9d469b423") },
                        new { UserId = new Guid("e7185974-4f61-4acf-8d90-cae62501a502"), RoleId = new Guid("88e13d98-6ce6-453b-a0e8-349b30490f2d"), Id = new Guid("d79ea29c-91ee-409e-abf8-bc13c008db91") },
                        new { UserId = new Guid("93472e84-0ffa-4a4f-9ab6-3e039007a499"), RoleId = new Guid("88e13d98-6ce6-453b-a0e8-349b30490f2d"), Id = new Guid("aebb504f-3954-4247-a560-9183561b885e") },
                        new { UserId = new Guid("55c6f5f3-f432-41bd-a000-043868b75689"), RoleId = new Guid("88e13d98-6ce6-453b-a0e8-349b30490f2d"), Id = new Guid("6b89023a-af17-4393-887d-600635fb0302") },
                        new { UserId = new Guid("cd7c38f2-4fe7-46d0-87a8-91465ae74925"), RoleId = new Guid("88e13d98-6ce6-453b-a0e8-349b30490f2d"), Id = new Guid("b12e5d90-5e28-4b14-9f79-daa449dcd7e7") },
                        new { UserId = new Guid("2c8f7f14-950d-49a7-824f-66a114fb1ec0"), RoleId = new Guid("88e13d98-6ce6-453b-a0e8-349b30490f2d"), Id = new Guid("c9a334ac-445a-4e65-9271-c2147625ded1") },
                        new { UserId = new Guid("6940aa20-587c-4a95-8702-2b38103d7ca1"), RoleId = new Guid("88e13d98-6ce6-453b-a0e8-349b30490f2d"), Id = new Guid("e11d1528-412a-45fa-b06f-c3285d220380") },
                        new { UserId = new Guid("38ef7969-2cec-41e1-a851-3b07f6432a4d"), RoleId = new Guid("88e13d98-6ce6-453b-a0e8-349b30490f2d"), Id = new Guid("90ba96fe-a2cf-434b-b503-46368b4caec0") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("10a5da4f-5480-405b-8a3b-429cdf019059"), AccessFailedCount = 0, ConcurrencyStamp = "6cf01668-bb77-4666-bee4-24b66e8ec63f", Email = "dean1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN1@GMAIL.COM", NormalizedUserName = "DEAN1@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEDOF4tpSYk0lR9pZAoZxFGlJS2n7COu3Mo2JOFRr0EW8r+zcJpm9FDoO/EnOo8y7dQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean1@gmail.com" },
                        new { Id = new Guid("719d1278-36c2-40c4-900e-e08be0ffe979"), AccessFailedCount = 0, ConcurrencyStamp = "715bc33a-0a99-4dc2-a9ac-34d53fffaa70", Email = "dean2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN2@GMAIL.COM", NormalizedUserName = "DEAN2@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEPuD6yeM1/zglNWOQMOxGSiUGHd52cfZmBgnZLtU96/K0MMkagB7wgyAAsyNj12ygQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean2@gmail.com" },
                        new { Id = new Guid("f8a75861-cc22-4396-90c0-0376b982b497"), AccessFailedCount = 0, ConcurrencyStamp = "4dd73337-0775-47e6-a2f6-2993e231aeca", Email = "dean3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN3@GMAIL.COM", NormalizedUserName = "DEAN3@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEGU4ZOIQw2RGCCrTHIhkck86g4C/KnZx5BCE2hNrKuYk8IHyEWZsI0A1xTCk/fmM3g==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean3@gmail.com" },
                        new { Id = new Guid("e60007bd-4b69-42c8-a1f7-dbb1a261f839"), AccessFailedCount = 0, ConcurrencyStamp = "3fced1b2-47e0-4f70-bad7-247978a955fa", Email = "dean4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN4@GMAIL.COM", NormalizedUserName = "DEAN4@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEL+ZxE3wz+X6JDGHCZmaTdOLu451gK/I/GG1QJpkS4nQQIxYSGsbe2kPI9cTqp77Hw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean4@gmail.com" },
                        new { Id = new Guid("f09a9d3c-0ac0-464f-8407-6eb7c7218681"), AccessFailedCount = 0, ConcurrencyStamp = "5a79db51-f253-4c58-8bda-01b7cada8e07", Email = "student1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT1@GMAIL.COM", NormalizedUserName = "STUDENT1@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEO8f+0HIX1AOrEACIUvs/gJOw4VywQ2f/fFdQvlAFn7SQoJeXImOzRV9qrgQVzTQ2Q==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student1@gmail.com" },
                        new { Id = new Guid("604cae1d-e388-4284-85bf-19bd61d6cf66"), AccessFailedCount = 0, ConcurrencyStamp = "0c5ba37b-8a76-45d3-9ed6-413cf1fc2bde", Email = "student2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT2@GMAIL.COM", NormalizedUserName = "STUDENT2@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEPPirA1C/G7cvHmMLE/7REiNf7mDBdwYJThpQB1gX+vElcNjzFGNRYBLG8+006CkXw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student2@gmail.com" },
                        new { Id = new Guid("754cfe79-028d-4d79-a44f-20567d418aa7"), AccessFailedCount = 0, ConcurrencyStamp = "069781c4-54f5-45d7-a1a0-175e30292f25", Email = "student3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT3@GMAIL.COM", NormalizedUserName = "STUDENT3@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEHD8i6oTXb6NbzQdPy3Dwm1lDwswWd/CuXc+C4gOdmIFUh4NJPEP8941ZPIEa128Pw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student3@gmail.com" },
                        new { Id = new Guid("cc234eb6-a1e6-452a-9bed-67d9ce984269"), AccessFailedCount = 0, ConcurrencyStamp = "c80d73a8-3b5e-4948-a888-280faa315913", Email = "student4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT4@GMAIL.COM", NormalizedUserName = "STUDENT4@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEM5Qso/st+/LHsItlge238xc7Dm5zVxLdkSqJkv/bb16gu1cNCAfUcwnRdLrMLY6JQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student4@gmail.com" },
                        new { Id = new Guid("e7185974-4f61-4acf-8d90-cae62501a502"), AccessFailedCount = 0, ConcurrencyStamp = "43265e62-9288-4853-bb05-c339d843ddb5", Email = "irmina.maslowska@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "IRMINA.MASLOWSKA@PUT.POZNAN.PL", NormalizedUserName = "IRMINA.MASLOWSKA@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEIkREAMaO7FXNTJ2AaODb+Isf2el306C+REqZj7j1WDvciOBzoqiofO+0Fa/6Yb12w==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "irmina.maslowska@put.poznan.pl" },
                        new { Id = new Guid("93472e84-0ffa-4a4f-9ab6-3e039007a499"), AccessFailedCount = 0, ConcurrencyStamp = "aa9bbd5d-8ed2-45fc-b25e-d0ab6bf123e1", Email = "bartlomiej.predki@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "BARTLOMIEJ.PREDKI@PUT.POZNAN.PL", NormalizedUserName = "BARTLOMIEJ.PREDKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEOcXmSeCsSPW+B3lPBiotmbp/IQ4AFMF/MI5oowtWn+t/xkZ16b5vd2u8JYSDiUE9g==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "bartlomiej.predki@put.poznan.pl" },
                        new { Id = new Guid("55c6f5f3-f432-41bd-a000-043868b75689"), AccessFailedCount = 0, ConcurrencyStamp = "cbe5be6b-6600-4e3e-9317-eb893e017c77", Email = "milosz.kadzinski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "MILOSZ.KADZINSKI@PUT.POZNAN.PL", NormalizedUserName = "MILOSZ.KADZINSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEKjWflXqy5fsBqlQzGe9Uz9Wvd+kV0XAh2BaxpB3oUK3tkVsMrP0zb9VKqw0ZtelRQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "milosz.kadzinski@put.poznan.pl" },
                        new { Id = new Guid("cd7c38f2-4fe7-46d0-87a8-91465ae74925"), AccessFailedCount = 0, ConcurrencyStamp = "68795e70-b5f0-43eb-8dbf-2ec190d5e834", Email = "wojciech.kotlowski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "WOJCIECH.KOTLOWSKI@PUT.POZNAN.PL", NormalizedUserName = "WOJCIECH.KOTLOWSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAECopdNr2TebxIfXvBEZVxeQqot9TxrfhLoBbju9WhwX9j5EtogsthslcPiDBXvrBlw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "wojciech.kotlowski@put.poznan.pl" },
                        new { Id = new Guid("2c8f7f14-950d-49a7-824f-66a114fb1ec0"), AccessFailedCount = 0, ConcurrencyStamp = "95d101f0-98cd-477a-aefd-8f79c17e67e7", Email = "jerzy.nawrocki@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "JERZY.NAWROCKI@PUT.POZNAN.PL", NormalizedUserName = "JERZY.NAWROCKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEGvN9vk6n3E9wmrVsGDZEOmhjGt9vJX2N0PSTCZgBgi+UgfxwLP8vVLt3TefcGli7w==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "jerzy.nawrocki@put.poznan.pl" },
                        new { Id = new Guid("6940aa20-587c-4a95-8702-2b38103d7ca1"), AccessFailedCount = 0, ConcurrencyStamp = "c0765c96-e717-423e-a4b7-3d0d66e60ae3", Email = "katarzyna.adamska@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "KATARZYNA.ADAMSKA@PUT.POZNAN.PL", NormalizedUserName = "KATARZYNA.ADAMSKA@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEO2WqNxt87Z79tkRh0qJ8BcpN+D2M7OXu13miG6vyv9RwNvxxMNuFEGTck1UOv3Gxg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "katarzyna.adamska@put.poznan.pl" },
                        new { Id = new Guid("38ef7969-2cec-41e1-a851-3b07f6432a4d"), AccessFailedCount = 0, ConcurrencyStamp = "88f082f5-9b2e-4fa0-8ce5-b3694f6f7d1f", Email = "krzysztof.alejski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "KRZYSZTOF.ALEJSKI@PUT.POZNAN.PL", NormalizedUserName = "KRZYSZTOF.ALEJSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEKbP11+upx5lQSUiH/KdKb0hnveBh6X22mfygN2Wc0eCRKuN5KsRfzqiBC02G39r+A==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "krzysztof.alejski@put.poznan.pl" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Institute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Institutes");

                    b.HasData(
                        new { Id = new Guid("2b6aba15-f94d-40d8-8987-a61938462d9e"), Name = "Instytut Informatyki" },
                        new { Id = new Guid("64a968fc-d969-4600-8ae1-381ec07521f8"), Name = "Instytut Technologii Mechanicznej" },
                        new { Id = new Guid("4f0ad8df-8817-4320-b919-99db8911ecd3"), Name = "Instytut Matematyki" },
                        new { Id = new Guid("5a68865a-8e62-4af5-8dd0-a71c4ed3e14b"), Name = "Instytut Technologii Materiałów" },
                        new { Id = new Guid("bcfede50-d761-471f-af22-11730426fc2d"), Name = "Instytut Inżynierii Lądowej" },
                        new { Id = new Guid("1ec70ec3-835c-4868-81bb-b0381705d536"), Name = "Instytut Inżynierii Środowiska" },
                        new { Id = new Guid("a7208887-1003-4c72-a5d9-d2fb169e26b4"), Name = "Instytut Chemii i Elektrochemii Technicznej" },
                        new { Id = new Guid("aaf84d52-faee-43a1-bcfd-44e8f4dc3163"), Name = "Instytut Elektrotechniki i Elektroniki Przemysłowej" },
                        new { Id = new Guid("a2e32b58-d3ea-4dd4-8d0a-7e1f0f3b76c0"), Name = "Instytut Mechaniki Stosowanej" },
                        new { Id = new Guid("043be15e-505f-4f7a-ab03-810661aca602"), Name = "Instytut Technologii i Inżynierii Chemicznej" },
                        new { Id = new Guid("1734b16b-2f52-489f-a8d3-9b7c9ca3336d"), Name = "Instytut Architektury i Planowania Przestrzennego" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ExpectedNumberOfBachelorProposals");

                    b.Property<int>("ExpectedNumberOfMasterProposals");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("InstituteId");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("TitlePostfix");

                    b.Property<string>("TitlePrefix")
                        .IsRequired();

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("UserId");

                    b.ToTable("Promoters");

                    b.HasData(
                        new { Id = new Guid("2a21d8e5-575a-41d9-99ed-fbb5c06a3db9"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Irmina", InstituteId = new Guid("2b6aba15-f94d-40d8-8987-a61938462d9e"), LastName = "Masłowska", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("e7185974-4f61-4acf-8d90-cae62501a502") },
                        new { Id = new Guid("d979fc9c-94d3-419a-a4e9-014e5664b73c"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Bartłomiej", InstituteId = new Guid("2b6aba15-f94d-40d8-8987-a61938462d9e"), LastName = "Prędki", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("93472e84-0ffa-4a4f-9ab6-3e039007a499") },
                        new { Id = new Guid("4ae4e691-dcff-4236-94ca-c97c102bc66c"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Miłosz", InstituteId = new Guid("2b6aba15-f94d-40d8-8987-a61938462d9e"), LastName = "Kadziński", TitlePostfix = "", TitlePrefix = "dr hab. inż.", UserId = new Guid("55c6f5f3-f432-41bd-a000-043868b75689") },
                        new { Id = new Guid("9aabdabd-8d1b-4c38-a2d0-0f88dca17533"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Wojciech", InstituteId = new Guid("2b6aba15-f94d-40d8-8987-a61938462d9e"), LastName = "Kotłowski", TitlePostfix = "", TitlePrefix = "dr hab. inż.", UserId = new Guid("cd7c38f2-4fe7-46d0-87a8-91465ae74925") },
                        new { Id = new Guid("48aea09b-4be3-4372-88bc-d46d78a1552b"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Jerzy", InstituteId = new Guid("2b6aba15-f94d-40d8-8987-a61938462d9e"), LastName = "Nawrocki", TitlePostfix = "prof. PP", TitlePrefix = "dr hab inż.", UserId = new Guid("2c8f7f14-950d-49a7-824f-66a114fb1ec0") },
                        new { Id = new Guid("fb23704f-cec8-48fb-aa79-f3bd0e7e293b"), ExpectedNumberOfBachelorProposals = 1, ExpectedNumberOfMasterProposals = 1, FirstName = "Katarzyna", InstituteId = new Guid("043be15e-505f-4f7a-ab03-810661aca602"), LastName = "Adamska", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("6940aa20-587c-4a95-8702-2b38103d7ca1") },
                        new { Id = new Guid("7345a41b-36aa-4ae2-b0fe-b7bb4279603b"), ExpectedNumberOfBachelorProposals = 3, ExpectedNumberOfMasterProposals = 2, FirstName = "Krzysztof", InstituteId = new Guid("043be15e-505f-4f7a-ab03-810661aca602"), LastName = "Alejski", TitlePostfix = "prof. PP", TitlePrefix = "dr hab. inż.", UserId = new Guid("38ef7969-2cec-41e1-a851-3b07f6432a4d") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CourseId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Level");

                    b.Property<int>("MaxNumberOfStudents");

                    b.Property<int>("Mode");

                    b.Property<string>("OutputData");

                    b.Property<Guid>("PromoterId");

                    b.Property<string>("Specialization");

                    b.Property<DateTime>("StartingDate");

                    b.Property<int>("Status");

                    b.Property<int>("StudyProfile");

                    b.Property<string>("TopicEnglish")
                        .IsRequired();

                    b.Property<string>("TopicPolish")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PromoterId");

                    b.ToTable("Proposals");

                    b.HasData(
                        new { Id = new Guid("57debcce-6ac7-4d3a-92fa-ada9481bbc52"), CourseId = new Guid("20cf1115-275d-4cc5-b931-4a03e1d8cd1e"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("48aea09b-4be3-4372-88bc-d46d78a1552b"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Capri 2 - system for managing diploma topic cards", TopicPolish = "Capri 2 - system do zarządzania kartami tematów prac dyplomowych" },
                        new { Id = new Guid("06dc60c5-2d38-4b83-ba03-fdcd2d101d16"), CourseId = new Guid("20cf1115-275d-4cc5-b931-4a03e1d8cd1e"), Description = "Celem pracy jest zaimplementowanie metod Electre 1s i Electre TRI jako aplikacji desktopowych.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("2a21d8e5-575a-41d9-99ed-fbb5c06a3db9"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Implementation of chosen methods from Electre family", TopicPolish = "Implementacja wybranych metod z rodziny Electre" },
                        new { Id = new Guid("a9bc47c5-03b8-431b-add9-303c210633e3"), CourseId = new Guid("20cf1115-275d-4cc5-b931-4a03e1d8cd1e"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("d979fc9c-94d3-419a-a4e9-014e5664b73c"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Implementation of decision support methods based on utility function (UTA, Assess)", TopicPolish = "Implementacja metod wspomagania decyzji opartych na funkcji użyteczności (UTA, Assess)" },
                        new { Id = new Guid("36d4a426-cbb5-495e-aa16-8a1640d1d81d"), CourseId = new Guid("20cf1115-275d-4cc5-b931-4a03e1d8cd1e"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("4ae4e691-dcff-4236-94ca-c97c102bc66c"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Extension of diviz platform", TopicPolish = "Rozszerzenie platformy diviz o metody wielokryterialnego wspomagania decyzji oparte na różnych modelach preferencji" },
                        new { Id = new Guid("f567eb85-1d80-4db8-82d3-f7c15e8e46ee"), CourseId = new Guid("20cf1115-275d-4cc5-b931-4a03e1d8cd1e"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("9aabdabd-8d1b-4c38-a2d0-0f88dca17533"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Style transfering using a neural network", TopicPolish = "Transfer stylu przy użyciu sieci neuronowej" },
                        new { Id = new Guid("60135938-7517-4329-a333-f16ed9cc3c90"), CourseId = new Guid("40d9ab3a-78a5-47db-8cd6-d0adc64fec53"), Description = "Praca będzie polegać na własnoręcznym upakowaniu kolumny chromatograficznej, doborze odpowiednich warunków pomiaru w celu wyznaczenia podstawowych parametrów dla niestandardowych kolumn do HPLC.", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("fb23704f-cec8-48fb-aa79-f3bd0e7e293b"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "No title", TopicPolish = "Wyznaczenie parametrów kolumny chromatograficznej za pomocą odwróconej chromatografii cieczowej" },
                        new { Id = new Guid("dd83cd53-0c38-4f7a-9a4d-1b77abc1cfd5"), CourseId = new Guid("40d9ab3a-78a5-47db-8cd6-d0adc64fec53"), Description = "Brak opisu", Level = 1, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("7345a41b-36aa-4ae2-b0fe-b7bb4279603b"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "No title", TopicPolish = "Analiza i projektowanie procesów wydzielania produktów otrzymywanych w procesie biokonwersji surowców odnawialnych" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<int>("IndexNumber");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<Guid?>("ProposalId");

                    b.Property<int>("Semester");

                    b.Property<int>("StudyLevel");

                    b.Property<int>("StudyMode");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("IndexNumber")
                        .IsUnique();

                    b.HasIndex("ProposalId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new { Id = new Guid("0e03b621-b456-469a-b8b2-6d52e1fed7ef"), FirstName = "Filip", IndexNumber = 132201, LastName = "Cegielski", Semester = 6, StudyLevel = 0, StudyMode = 0, UserId = new Guid("f09a9d3c-0ac0-464f-8407-6eb7c7218681") },
                        new { Id = new Guid("0f96c786-df22-497d-87e7-d6625268d7f9"), FirstName = "Marcin", IndexNumber = 132202, LastName = "Zawadzki", Semester = 6, StudyLevel = 0, StudyMode = 0, UserId = new Guid("604cae1d-e388-4284-85bf-19bd61d6cf66") },
                        new { Id = new Guid("5d3894af-9918-4224-a827-bdb2fbeaecbe"), FirstName = "Szymon", IndexNumber = 132203, LastName = "Wójcik", Semester = 6, StudyLevel = 0, StudyMode = 0, UserId = new Guid("754cfe79-028d-4d79-a44f-20567d418aa7") },
                        new { Id = new Guid("52470168-8608-42c9-84ac-b083e8e122ae"), FirstName = "Andrzej", IndexNumber = 132204, LastName = "Król", Semester = 6, StudyLevel = 0, StudyMode = 0, UserId = new Guid("cc234eb6-a1e6-452a-9bed-67d9ce984269") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Course", b =>
                {
                    b.HasOne("Capri.Database.Entities.Faculty", "Faculty")
                        .WithMany("Courses")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.HasOne("Capri.Database.Entities.Institute", "Institute")
                        .WithMany("Promoters")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.HasOne("Capri.Database.Entities.Course", "Course")
                        .WithMany("Proposals")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Capri.Database.Entities.Promoter", "Promoter")
                        .WithMany("Proposals")
                        .HasForeignKey("PromoterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.HasOne("Capri.Database.Entities.Proposal", "Proposal")
                        .WithMany("Students")
                        .HasForeignKey("ProposalId");

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
