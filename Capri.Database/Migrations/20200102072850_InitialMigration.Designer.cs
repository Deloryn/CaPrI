// <auto-generated />
using System;
using Capri.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capri.Database.Migrations
{
    [DbContext(typeof(CapriDbContext))]
    [Migration("20200102072850_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capri.Database.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FacultyId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Courses");

                    b.HasData(
                        new { Id = new Guid("b4599a30-a0aa-45e6-a15d-3e67ca57aa46"), FacultyId = new Guid("21f541fb-1876-4e89-af23-b6ff09ab5004"), Name = "Architektura" },
                        new { Id = new Guid("609f879f-9948-4e65-a6b8-94e11d6f9a49"), FacultyId = new Guid("21f541fb-1876-4e89-af23-b6ff09ab5004"), Name = "Architektura Wnętrz" },
                        new { Id = new Guid("d141684e-b259-476e-a968-d3d85d3916f2"), FacultyId = new Guid("4ce6c2bc-bde7-45cf-b8ca-0bcb26b95c04"), Name = "Budownictwo" },
                        new { Id = new Guid("00f83410-d613-4b2d-b0ad-2563a76172d0"), FacultyId = new Guid("4ce6c2bc-bde7-45cf-b8ca-0bcb26b95c04"), Name = "Inżynieria Środowiska" },
                        new { Id = new Guid("51ee3447-dbb9-4aac-a94e-39e767269cc6"), FacultyId = new Guid("07cc9446-555d-4c97-827f-248e3f851f3d"), Name = "Inżynieria Biomedyczna" },
                        new { Id = new Guid("151f2559-9f6c-427c-b3d2-b2d314c2028a"), FacultyId = new Guid("07cc9446-555d-4c97-827f-248e3f851f3d"), Name = "Inżynieria Materiałowa" },
                        new { Id = new Guid("49660efe-a92d-43d9-90dd-a35d6356a9d3"), FacultyId = new Guid("07cc9446-555d-4c97-827f-248e3f851f3d"), Name = "Mechanika i Budowa Maszyn" },
                        new { Id = new Guid("0a8dee16-505e-4804-8ce5-e5d5bcacdf35"), FacultyId = new Guid("07cc9446-555d-4c97-827f-248e3f851f3d"), Name = "Mechatronika" },
                        new { Id = new Guid("aac377f9-e11f-4dac-b1b0-abbc00e34bca"), FacultyId = new Guid("07cc9446-555d-4c97-827f-248e3f851f3d"), Name = "Zarządzanie i Inżynieria Produkcji" },
                        new { Id = new Guid("6340c89a-cde7-439b-b579-6bbe34aedf20"), FacultyId = new Guid("3c6a4c75-86c7-4a7d-9356-865d6b6e4451"), Name = "Elektronika i Telekomunikacja" },
                        new { Id = new Guid("0597346d-9576-405d-94fb-a4f08803a493"), FacultyId = new Guid("3c6a4c75-86c7-4a7d-9356-865d6b6e4451"), Name = "Teleinformatyka" },
                        new { Id = new Guid("01c83336-989c-47f0-a241-fdd800334e06"), FacultyId = new Guid("25ac48c7-d909-4ff4-b5e8-c8e256b78f5a"), Name = "Automatyka i Robotyka" },
                        new { Id = new Guid("ad1a3b10-ea90-4d8d-a379-57831eebc571"), FacultyId = new Guid("25ac48c7-d909-4ff4-b5e8-c8e256b78f5a"), Name = "Elektrotechnika" },
                        new { Id = new Guid("ad136db5-1582-4709-928b-7fc6093c5c1a"), FacultyId = new Guid("25ac48c7-d909-4ff4-b5e8-c8e256b78f5a"), Name = "Energetyka" },
                        new { Id = new Guid("4ffa2bee-b3ba-4312-9712-da83541a2788"), FacultyId = new Guid("25ac48c7-d909-4ff4-b5e8-c8e256b78f5a"), Name = "Matematyka w Technice" },
                        new { Id = new Guid("f841a913-5239-47e4-8a25-2391e684aed5"), FacultyId = new Guid("0e0eb4ca-2def-4349-96eb-0e920f24760c"), Name = "Edukacja Techniczno-Informatyczna" },
                        new { Id = new Guid("053046f6-a344-4bbc-9e39-41856919780c"), FacultyId = new Guid("0e0eb4ca-2def-4349-96eb-0e920f24760c"), Name = "Fizyka Techniczna" },
                        new { Id = new Guid("f19de075-d03c-4120-a1c3-29d05954a995"), FacultyId = new Guid("5040b13b-72c7-4b3c-a983-2d4d4d141e84"), Name = "Informatyka" },
                        new { Id = new Guid("0f4d118f-2eec-4aa0-9c0d-8029f21e2024"), FacultyId = new Guid("5040b13b-72c7-4b3c-a983-2d4d4d141e84"), Name = "Bioinformatyka" },
                        new { Id = new Guid("5615ee14-1366-4395-8402-6f21c1731ee1"), FacultyId = new Guid("5040b13b-72c7-4b3c-a983-2d4d4d141e84"), Name = "Sztuczna Inteligencja / Artificial Intelligence" },
                        new { Id = new Guid("13c77616-9efb-4315-9f2b-8b56330978ae"), FacultyId = new Guid("bbaf8a32-ca6f-4eb2-84a0-21e83dfed7b9"), Name = "Konstrukcja i Eksploatacja Środków Transportu" },
                        new { Id = new Guid("7a3d9e77-fd9a-4fc7-b7e6-e7b92fa088ab"), FacultyId = new Guid("bbaf8a32-ca6f-4eb2-84a0-21e83dfed7b9"), Name = "Transport" },
                        new { Id = new Guid("91c4a790-227a-40cb-b1f1-e580ac8dd762"), FacultyId = new Guid("bbaf8a32-ca6f-4eb2-84a0-21e83dfed7b9"), Name = "Lotnictwo i Kosmonautyka" },
                        new { Id = new Guid("3a1823f2-b6e1-4683-9961-6147c33fe2c4"), FacultyId = new Guid("f760b789-5aca-414b-91cb-144a56b202d4"), Name = "Logistyka" },
                        new { Id = new Guid("c20bd095-5485-4cba-8e35-12cabec8ee80"), FacultyId = new Guid("f760b789-5aca-414b-91cb-144a56b202d4"), Name = "Inżynieria Zarządzania" },
                        new { Id = new Guid("95ba80cd-8af5-4831-a87e-ff2d53ffe059"), FacultyId = new Guid("f760b789-5aca-414b-91cb-144a56b202d4"), Name = "Inżynieria Bezpieczeństwa" },
                        new { Id = new Guid("e996a486-f851-40dd-870e-c28a8f1222b5"), FacultyId = new Guid("36001ee0-0141-4ed7-9ee5-ba674333e253"), Name = "Inżynieria Chemiczna i Procesowa" },
                        new { Id = new Guid("c34aab71-06b1-46f4-9ecb-d155b90e8621"), FacultyId = new Guid("36001ee0-0141-4ed7-9ee5-ba674333e253"), Name = "Technologia Chemiczna / Chemical Technology" },
                        new { Id = new Guid("3b2f99c9-1409-4f1d-8b63-3e88f1da7382"), FacultyId = new Guid("36001ee0-0141-4ed7-9ee5-ba674333e253"), Name = "Technologie Ochrony Środowiska" },
                        new { Id = new Guid("81e12855-fb34-436d-966c-ae6704a92fe2"), FacultyId = new Guid("36001ee0-0141-4ed7-9ee5-ba674333e253"), Name = "Inżynieria Farmaceutyczna" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new { Id = new Guid("21f541fb-1876-4e89-af23-b6ff09ab5004"), Name = "Wydział Architektury" },
                        new { Id = new Guid("4ce6c2bc-bde7-45cf-b8ca-0bcb26b95c04"), Name = "Wydział Budownictwa i Inżynierii Środowiska" },
                        new { Id = new Guid("07cc9446-555d-4c97-827f-248e3f851f3d"), Name = "Wydział Budowy Maszyn i Zarządzania" },
                        new { Id = new Guid("3c6a4c75-86c7-4a7d-9356-865d6b6e4451"), Name = "Wydział Elektroniki i Telekomunikacji" },
                        new { Id = new Guid("25ac48c7-d909-4ff4-b5e8-c8e256b78f5a"), Name = "Wydział Elektryczny" },
                        new { Id = new Guid("0e0eb4ca-2def-4349-96eb-0e920f24760c"), Name = "Wydział Fizyki Technicznej" },
                        new { Id = new Guid("5040b13b-72c7-4b3c-a983-2d4d4d141e84"), Name = "Wydział Informatyki" },
                        new { Id = new Guid("bbaf8a32-ca6f-4eb2-84a0-21e83dfed7b9"), Name = "Wydział Inżynierii Transportu" },
                        new { Id = new Guid("f760b789-5aca-414b-91cb-144a56b202d4"), Name = "Wydział Inżynierii Zarządzania" },
                        new { Id = new Guid("36001ee0-0141-4ed7-9ee5-ba674333e253"), Name = "Wydział Technologii Chemicznej" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = new Guid("fba1b750-349a-4114-a363-fa1ceffcc24b"), ConcurrencyStamp = "de2e2c70-0c28-46cb-9ab4-6819722eed9f", Name = "dean", NormalizedName = "dean" },
                        new { Id = new Guid("ac360758-2e5d-4504-9e8b-d46f2ffac2b4"), ConcurrencyStamp = "4abadafa-3b91-4a3d-908e-eb203c9eb422", Name = "student", NormalizedName = "student" },
                        new { Id = new Guid("726f529f-a2a7-4f34-8d3e-fdb879a402f4"), ConcurrencyStamp = "b5869aa4-dba3-4007-a3ef-ff677fe1e0aa", Name = "promoter", NormalizedName = "promoter" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new { Id = new Guid("d826db85-359a-47b0-b100-d8bcc0bd1ccc"), RoleId = new Guid("fba1b750-349a-4114-a363-fa1ceffcc24b"), UserId = new Guid("bb50ceed-ce6d-4f04-8c8b-ebdbe133c064") },
                        new { Id = new Guid("e2dd1202-d7a0-4312-9bc5-127905ffbf9e"), RoleId = new Guid("fba1b750-349a-4114-a363-fa1ceffcc24b"), UserId = new Guid("e5f5cece-b008-4ae8-b240-95b22d213237") },
                        new { Id = new Guid("55f3a527-4e49-40b9-8351-9663c699a903"), RoleId = new Guid("fba1b750-349a-4114-a363-fa1ceffcc24b"), UserId = new Guid("de5313fe-6714-41b9-8d91-054f69f08d9a") },
                        new { Id = new Guid("a605f61c-86e2-4541-a76c-a54d97939ad4"), RoleId = new Guid("fba1b750-349a-4114-a363-fa1ceffcc24b"), UserId = new Guid("91487701-ffd8-4dac-8b53-7fb02cee4cb6") },
                        new { Id = new Guid("21b4be11-9de2-4f6f-a753-2637e8343795"), RoleId = new Guid("ac360758-2e5d-4504-9e8b-d46f2ffac2b4"), UserId = new Guid("c3099d35-0868-4690-8a2b-17b2a41be37b") },
                        new { Id = new Guid("28ee27cc-a542-4654-933a-758b5b178e97"), RoleId = new Guid("ac360758-2e5d-4504-9e8b-d46f2ffac2b4"), UserId = new Guid("0189d561-7e83-4084-9185-d705ed21295e") },
                        new { Id = new Guid("8423efad-2109-450f-b542-0d3deb9a04c6"), RoleId = new Guid("ac360758-2e5d-4504-9e8b-d46f2ffac2b4"), UserId = new Guid("6e9acc5c-2321-4345-af11-50a5af548c3e") },
                        new { Id = new Guid("127c14f0-7748-4230-9842-c1ee942a9265"), RoleId = new Guid("ac360758-2e5d-4504-9e8b-d46f2ffac2b4"), UserId = new Guid("25312726-dafd-4be0-a59d-97013c46bd88") },
                        new { Id = new Guid("c7eabd3c-e7f6-4774-a516-5b1aed311bd5"), RoleId = new Guid("726f529f-a2a7-4f34-8d3e-fdb879a402f4"), UserId = new Guid("1b7c1541-08d5-4d61-aea3-8190812df48f") },
                        new { Id = new Guid("652cba2b-9d79-4dc4-8061-cfa87c745e39"), RoleId = new Guid("726f529f-a2a7-4f34-8d3e-fdb879a402f4"), UserId = new Guid("a6822801-97ab-4581-a478-45535d8adf9e") },
                        new { Id = new Guid("737334dc-2f2b-46bf-87e1-e09440c37ea6"), RoleId = new Guid("726f529f-a2a7-4f34-8d3e-fdb879a402f4"), UserId = new Guid("7e53e191-b0a9-48db-9691-c08926577420") },
                        new { Id = new Guid("c4d82e02-9df5-4468-bf50-583f54e0a4fb"), RoleId = new Guid("726f529f-a2a7-4f34-8d3e-fdb879a402f4"), UserId = new Guid("bc7716c1-6011-434a-9623-ef0722083cc0") },
                        new { Id = new Guid("47aff503-e3c3-46a0-b780-e32db5ec75da"), RoleId = new Guid("726f529f-a2a7-4f34-8d3e-fdb879a402f4"), UserId = new Guid("a350be55-3326-4210-b0a6-becc4bef92ea") },
                        new { Id = new Guid("c5ae2784-167a-4e4a-9277-ae03e3844147"), RoleId = new Guid("726f529f-a2a7-4f34-8d3e-fdb879a402f4"), UserId = new Guid("f823cd14-794c-4afd-98b3-a1dfb3ffba50") },
                        new { Id = new Guid("578feef9-e850-4798-b24b-e4a9ccebb862"), RoleId = new Guid("726f529f-a2a7-4f34-8d3e-fdb879a402f4"), UserId = new Guid("c216cba0-63da-4acf-998f-73125906d1fa") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("bb50ceed-ce6d-4f04-8c8b-ebdbe133c064"), AccessFailedCount = 0, ConcurrencyStamp = "c09b3ecf-06ab-4b92-85d1-38b35f564b44", Email = "dean1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN1@GMAIL.COM", NormalizedUserName = "DEAN1@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAELLZAhzWqaM3l1sWIdAyAvsVm0ecutpumSV85zOAamNV5s6gi6j73R+m5SmqFzhr+g==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean1@gmail.com" },
                        new { Id = new Guid("e5f5cece-b008-4ae8-b240-95b22d213237"), AccessFailedCount = 0, ConcurrencyStamp = "8d2ec2ff-2694-4d38-a236-865278aa78ea", Email = "dean2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN2@GMAIL.COM", NormalizedUserName = "DEAN2@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEJqs1XY3ImKFPtXKHCeV1zDx60TNq5ynARDMPzt2CqRuC9ded82TEXFWeFJT+w+0pQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean2@gmail.com" },
                        new { Id = new Guid("de5313fe-6714-41b9-8d91-054f69f08d9a"), AccessFailedCount = 0, ConcurrencyStamp = "7289a7ff-6a99-41f2-b1c6-3d32297de78b", Email = "dean3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN3@GMAIL.COM", NormalizedUserName = "DEAN3@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAELzTnhf/tCs/gAdKJZ+lAXVbkPdGfpZl8IMM4+IMjRX0H3/l3GsaO590uHdMGbuiNg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean3@gmail.com" },
                        new { Id = new Guid("91487701-ffd8-4dac-8b53-7fb02cee4cb6"), AccessFailedCount = 0, ConcurrencyStamp = "e93ed50e-2959-4a34-a87a-e22a59c25499", Email = "dean4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN4@GMAIL.COM", NormalizedUserName = "DEAN4@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEAIUxOOTi12aQOdwLgpD6k9tHYJSLUahrgcYhzCkkXQmfxOjwFaiBLFM+St7R/e84g==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean4@gmail.com" },
                        new { Id = new Guid("c3099d35-0868-4690-8a2b-17b2a41be37b"), AccessFailedCount = 0, ConcurrencyStamp = "4e5fa8be-4a82-429f-8478-60f8130de664", Email = "student1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT1@GMAIL.COM", NormalizedUserName = "STUDENT1@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEGaRZDY5XTxKfDXEefIC7BcM/Ke5RuLfokgzK4rwP3QIEOXbLO5dfPltvfeP86j+Vg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student1@gmail.com" },
                        new { Id = new Guid("0189d561-7e83-4084-9185-d705ed21295e"), AccessFailedCount = 0, ConcurrencyStamp = "832d1d4b-4aee-4f97-9f18-7a3dbbb329e7", Email = "student2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT2@GMAIL.COM", NormalizedUserName = "STUDENT2@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEMlRHL/iRglNiB3cRwS8xOu4LBTEM/R6D4P8iI6+bQbUKFiaMRkai59tRIeEdO/uWQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student2@gmail.com" },
                        new { Id = new Guid("6e9acc5c-2321-4345-af11-50a5af548c3e"), AccessFailedCount = 0, ConcurrencyStamp = "4f54758b-01c4-44ab-b568-857205a00a4d", Email = "student3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT3@GMAIL.COM", NormalizedUserName = "STUDENT3@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAELpUqqvCDIFZVeK5G+gX6/X6eDe5zvCPZrbeDjPXQ7XfLYjpvLgoxVWSx+OhIt/s1A==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student3@gmail.com" },
                        new { Id = new Guid("25312726-dafd-4be0-a59d-97013c46bd88"), AccessFailedCount = 0, ConcurrencyStamp = "7949a7ea-8792-4f7c-9f90-935a8dbd12a1", Email = "student4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT4@GMAIL.COM", NormalizedUserName = "STUDENT4@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEG7AYUHZcvILza9l2aMJ0arm8X8m0+4DANTnAtqB738RoiwD4z45Ly8bUueLhmmXrg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student4@gmail.com" },
                        new { Id = new Guid("1b7c1541-08d5-4d61-aea3-8190812df48f"), AccessFailedCount = 0, ConcurrencyStamp = "554fd4dc-6403-490d-82d1-58643747bf30", Email = "irmina.maslowska@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "IRMINA.MASLOWSKA@PUT.POZNAN.PL", NormalizedUserName = "IRMINA.MASLOWSKA@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEJmdszX9Exsw42n+c4nrfE9SZnyXpJLy09GnqqcJk0fXa3VjA2drS9xfxGMZuuaytg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "irmina.maslowska@put.poznan.pl" },
                        new { Id = new Guid("a6822801-97ab-4581-a478-45535d8adf9e"), AccessFailedCount = 0, ConcurrencyStamp = "67e634a6-0f78-4eb5-a816-29c55d0d6ce0", Email = "bartlomiej.predki@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "BARTLOMIEJ.PREDKI@PUT.POZNAN.PL", NormalizedUserName = "BARTLOMIEJ.PREDKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAECHoPq+lsZO9ULuE7PnJGKf6x95VlFIBxWScOPvQ5ysf3OMAhY9y+loYpgox+BmALQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "bartlomiej.predki@put.poznan.pl" },
                        new { Id = new Guid("7e53e191-b0a9-48db-9691-c08926577420"), AccessFailedCount = 0, ConcurrencyStamp = "0f0dba68-995b-4132-80cc-ee4c45237e43", Email = "milosz.kadzinski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "MILOSZ.KADZINSKI@PUT.POZNAN.PL", NormalizedUserName = "MILOSZ.KADZINSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEGUhk9j1RMENBsBedyUL15tuCV9ekVtry7zXYZbWNmE7FY54r38Ln/Msni/ZqTClfg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "milosz.kadzinski@put.poznan.pl" },
                        new { Id = new Guid("bc7716c1-6011-434a-9623-ef0722083cc0"), AccessFailedCount = 0, ConcurrencyStamp = "151f3b5d-0b70-46d5-bd10-85ad03973703", Email = "wojciech.kotlowski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "WOJCIECH.KOTLOWSKI@PUT.POZNAN.PL", NormalizedUserName = "WOJCIECH.KOTLOWSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEJCxj6lPxAab3v0n10vq1ZP6MyOeWMvMDjzxQT7fAbOvb2oxVnTFmto8Cgx/EUVZ2g==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "wojciech.kotlowski@put.poznan.pl" },
                        new { Id = new Guid("a350be55-3326-4210-b0a6-becc4bef92ea"), AccessFailedCount = 0, ConcurrencyStamp = "964c7543-2f9e-40e6-97c4-5620b24384f9", Email = "jerzy.nawrocki@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "JERZY.NAWROCKI@PUT.POZNAN.PL", NormalizedUserName = "JERZY.NAWROCKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEGKl1MY3bgfKtsKGgINE+PpCpLUsDtb6IEeEVeb9uIwYcyqOxlpbR6Gu0jgyafmeaA==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "jerzy.nawrocki@put.poznan.pl" },
                        new { Id = new Guid("f823cd14-794c-4afd-98b3-a1dfb3ffba50"), AccessFailedCount = 0, ConcurrencyStamp = "efd2e26c-fbe3-47ea-a3c6-3188245abfb1", Email = "katarzyna.adamska@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "KATARZYNA.ADAMSKA@PUT.POZNAN.PL", NormalizedUserName = "KATARZYNA.ADAMSKA@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEKZhKfaOBXXXKNrJTizdkckUmVFcf6kU3KWEF0z3J4BhGbVNQd86E+6KIemB0o82Aw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "katarzyna.adamska@put.poznan.pl" },
                        new { Id = new Guid("c216cba0-63da-4acf-998f-73125906d1fa"), AccessFailedCount = 0, ConcurrencyStamp = "34e03c81-5b70-452c-886c-f4a62701ff91", Email = "krzysztof.alejski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "KRZYSZTOF.ALEJSKI@PUT.POZNAN.PL", NormalizedUserName = "KRZYSZTOF.ALEJSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEKDHliXkUblmD6S/n4s985S68BcbLCA+cu/wIYQNvQUTzRU0co5wzP7NpqrXJZQRyg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "krzysztof.alejski@put.poznan.pl" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Institute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Institutes");

                    b.HasData(
                        new { Id = new Guid("bedc99ed-5cc7-42f8-9fb8-7a413e7cbfa0"), Name = "Instytut Informatyki" },
                        new { Id = new Guid("f0fa358f-5dd6-40ad-9a53-e9fe7665c927"), Name = "Instytut Technologii Mechanicznej" },
                        new { Id = new Guid("6e89e3fe-b110-476f-97ba-eb1afdceeca8"), Name = "Instytut Matematyki" },
                        new { Id = new Guid("641a82dd-a257-4119-92de-1c8f5dff4546"), Name = "Instytut Technologii Materiałów" },
                        new { Id = new Guid("e63cb728-86b0-4cfd-b1e8-02b329ed3083"), Name = "Instytut Inżynierii Lądowej" },
                        new { Id = new Guid("489167a4-2709-4cee-934b-f62e877d6725"), Name = "Instytut Inżynierii Środowiska" },
                        new { Id = new Guid("32411ec2-6864-4d06-99d7-6a07faa992c0"), Name = "Instytut Chemii i Elektrochemii Technicznej" },
                        new { Id = new Guid("8503bf23-2a38-4752-92dd-db5373454427"), Name = "Instytut Elektrotechniki i Elektroniki Przemysłowej" },
                        new { Id = new Guid("9db566a9-2928-4dbb-8afa-cd91c5fb67e2"), Name = "Instytut Mechaniki Stosowanej" },
                        new { Id = new Guid("39dcb4de-d35d-4da5-bf08-421e6aed1ee4"), Name = "Instytut Technologii i Inżynierii Chemicznej" },
                        new { Id = new Guid("b936eeac-dac2-456a-ba18-75909446c304"), Name = "Instytut Architektury i Planowania Przestrzennego" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ExpectedNumberOfBachelorProposals");

                    b.Property<int>("ExpectedNumberOfMasterProposals");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("InstituteId");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("TitlePostfix");

                    b.Property<string>("TitlePrefix")
                        .IsRequired();

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("UserId");

                    b.ToTable("Promoters");

                    b.HasData(
                        new { Id = new Guid("2a21d8e5-575a-41d9-99ed-fbb5c06a3db9"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Irmina", InstituteId = new Guid("bedc99ed-5cc7-42f8-9fb8-7a413e7cbfa0"), LastName = "Masłowska", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("1b7c1541-08d5-4d61-aea3-8190812df48f") },
                        new { Id = new Guid("d979fc9c-94d3-419a-a4e9-014e5664b73c"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Bartłomiej", InstituteId = new Guid("bedc99ed-5cc7-42f8-9fb8-7a413e7cbfa0"), LastName = "Prędki", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("a6822801-97ab-4581-a478-45535d8adf9e") },
                        new { Id = new Guid("4ae4e691-dcff-4236-94ca-c97c102bc66c"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Miłosz", InstituteId = new Guid("bedc99ed-5cc7-42f8-9fb8-7a413e7cbfa0"), LastName = "Kadziński", TitlePostfix = "", TitlePrefix = "dr hab. inż.", UserId = new Guid("7e53e191-b0a9-48db-9691-c08926577420") },
                        new { Id = new Guid("9aabdabd-8d1b-4c38-a2d0-0f88dca17533"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Wojciech", InstituteId = new Guid("bedc99ed-5cc7-42f8-9fb8-7a413e7cbfa0"), LastName = "Kotłowski", TitlePostfix = "", TitlePrefix = "dr hab. inż.", UserId = new Guid("bc7716c1-6011-434a-9623-ef0722083cc0") },
                        new { Id = new Guid("48aea09b-4be3-4372-88bc-d46d78a1552b"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Jerzy", InstituteId = new Guid("bedc99ed-5cc7-42f8-9fb8-7a413e7cbfa0"), LastName = "Nawrocki", TitlePostfix = "prof. PP", TitlePrefix = "dr hab inż.", UserId = new Guid("a350be55-3326-4210-b0a6-becc4bef92ea") },
                        new { Id = new Guid("fb23704f-cec8-48fb-aa79-f3bd0e7e293b"), ExpectedNumberOfBachelorProposals = 1, ExpectedNumberOfMasterProposals = 1, FirstName = "Katarzyna", InstituteId = new Guid("39dcb4de-d35d-4da5-bf08-421e6aed1ee4"), LastName = "Adamska", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("f823cd14-794c-4afd-98b3-a1dfb3ffba50") },
                        new { Id = new Guid("7345a41b-36aa-4ae2-b0fe-b7bb4279603b"), ExpectedNumberOfBachelorProposals = 3, ExpectedNumberOfMasterProposals = 2, FirstName = "Krzysztof", InstituteId = new Guid("39dcb4de-d35d-4da5-bf08-421e6aed1ee4"), LastName = "Alejski", TitlePostfix = "prof. PP", TitlePrefix = "dr hab. inż.", UserId = new Guid("c216cba0-63da-4acf-998f-73125906d1fa") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CourseId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Level");

                    b.Property<int>("MaxNumberOfStudents");

                    b.Property<int>("Mode");

                    b.Property<string>("OutputData");

                    b.Property<Guid>("PromoterId");

                    b.Property<string>("Specialization");

                    b.Property<DateTime>("StartingDate");

                    b.Property<int>("Status");

                    b.Property<int>("StudyProfile");

                    b.Property<string>("TopicEnglish")
                        .IsRequired();

                    b.Property<string>("TopicPolish")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PromoterId");

                    b.ToTable("Proposals");

                    b.HasData(
                        new { Id = new Guid("c518934d-f083-4168-ae75-a44c83a7a254"), CourseId = new Guid("f19de075-d03c-4120-a1c3-29d05954a995"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("48aea09b-4be3-4372-88bc-d46d78a1552b"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Capri 2 - system for managing diploma topic cards", TopicPolish = "Capri 2 - system do zarządzania kartami tematów prac dyplomowych" },
                        new { Id = new Guid("86cce6a8-6d77-4887-99f5-1e8e61a59079"), CourseId = new Guid("f19de075-d03c-4120-a1c3-29d05954a995"), Description = "Celem pracy jest zaimplementowanie metod Electre 1s i Electre TRI jako aplikacji desktopowych.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("2a21d8e5-575a-41d9-99ed-fbb5c06a3db9"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Implementation of chosen methods from Electre family", TopicPolish = "Implementacja wybranych metod z rodziny Electre" },
                        new { Id = new Guid("e8da1d5e-a2ff-45c4-a9b3-a74a417433e5"), CourseId = new Guid("f19de075-d03c-4120-a1c3-29d05954a995"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("d979fc9c-94d3-419a-a4e9-014e5664b73c"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Implementation of decision support methods based on utility function (UTA, Assess)", TopicPolish = "Implementacja metod wspomagania decyzji opartych na funkcji użyteczności (UTA, Assess)" },
                        new { Id = new Guid("149a7370-b956-4ac8-ba7f-a88237481bc3"), CourseId = new Guid("f19de075-d03c-4120-a1c3-29d05954a995"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("4ae4e691-dcff-4236-94ca-c97c102bc66c"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Extension of diviz platform", TopicPolish = "Rozszerzenie platformy diviz o metody wielokryterialnego wspomagania decyzji oparte na różnych modelach preferencji" },
                        new { Id = new Guid("9d88f8c4-8a00-44e8-9335-eed7a7a4a3ae"), CourseId = new Guid("f19de075-d03c-4120-a1c3-29d05954a995"), Description = "Opis.....", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("9aabdabd-8d1b-4c38-a2d0-0f88dca17533"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Style transfering using a neural network", TopicPolish = "Transfer stylu przy użyciu sieci neuronowej" },
                        new { Id = new Guid("dec45138-e53c-4fce-92fb-4245dd161e8f"), CourseId = new Guid("e996a486-f851-40dd-870e-c28a8f1222b5"), Description = "Praca będzie polegać na własnoręcznym upakowaniu kolumny chromatograficznej, doborze odpowiednich warunków pomiaru w celu wyznaczenia podstawowych parametrów dla niestandardowych kolumn do HPLC.", Level = 0, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("fb23704f-cec8-48fb-aa79-f3bd0e7e293b"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "No title", TopicPolish = "Wyznaczenie parametrów kolumny chromatograficznej za pomocą odwróconej chromatografii cieczowej" },
                        new { Id = new Guid("7df3e851-3665-4cba-be0c-6773c46ac102"), CourseId = new Guid("e996a486-f851-40dd-870e-c28a8f1222b5"), Description = "Brak opisu", Level = 1, MaxNumberOfStudents = 4, Mode = 0, OutputData = "Brak danych", PromoterId = new Guid("7345a41b-36aa-4ae2-b0fe-b7bb4279603b"), Specialization = "-", StartingDate = new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "No title", TopicPolish = "Analiza i projektowanie procesów wydzielania produktów otrzymywanych w procesie biokonwersji surowców odnawialnych" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ProposalId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new { Id = new Guid("b105b2d1-bf26-4023-b15e-77fc3508e480"), UserId = new Guid("c3099d35-0868-4690-8a2b-17b2a41be37b") },
                        new { Id = new Guid("137d6d06-a67f-4d17-8449-4a29ea58a6d0"), UserId = new Guid("0189d561-7e83-4084-9185-d705ed21295e") },
                        new { Id = new Guid("f1ef9786-c0de-48e2-bee7-4c79b839c93a"), UserId = new Guid("6e9acc5c-2321-4345-af11-50a5af548c3e") },
                        new { Id = new Guid("713f95de-c0d4-4d4c-a482-6553f2c5be23"), UserId = new Guid("25312726-dafd-4be0-a59d-97013c46bd88") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Course", b =>
                {
                    b.HasOne("Capri.Database.Entities.Faculty", "Faculty")
                        .WithMany("Courses")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.HasOne("Capri.Database.Entities.Institute", "Institute")
                        .WithMany("Promoters")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.HasOne("Capri.Database.Entities.Course", "Course")
                        .WithMany("Proposals")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Capri.Database.Entities.Promoter", "Promoter")
                        .WithMany("Proposals")
                        .HasForeignKey("PromoterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.HasOne("Capri.Database.Entities.Proposal")
                        .WithMany("Students")
                        .HasForeignKey("ProposalId");

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
