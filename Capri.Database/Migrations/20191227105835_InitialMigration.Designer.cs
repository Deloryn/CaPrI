// <auto-generated />
using System;
using Capri.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capri.Database.Migrations
{
    [DbContext(typeof(CapriDbContext))]
    [Migration("20191227105835_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capri.Database.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("FacultyId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Courses");

                    b.HasData(
                        new { Id = new Guid("f667b3b0-fd83-401d-a868-e07363e3ed79"), FacultyId = new Guid("08c4fc6e-009a-43c5-967c-aa63a58c51ba"), Name = "Architektura" },
                        new { Id = new Guid("9a9339f5-ba21-417f-8ed4-201335b7cdcf"), FacultyId = new Guid("08c4fc6e-009a-43c5-967c-aa63a58c51ba"), Name = "Architektura Wnętrz" },
                        new { Id = new Guid("25c7d418-9299-4fbd-995f-364a8dd21de2"), FacultyId = new Guid("1f25c304-5861-4906-a573-a4d79d1b4c8c"), Name = "Budownictwo" },
                        new { Id = new Guid("b22dda08-5caa-4ad3-bb17-68921f9008ee"), FacultyId = new Guid("1f25c304-5861-4906-a573-a4d79d1b4c8c"), Name = "Inżynieria Środowiska" },
                        new { Id = new Guid("44679f4f-7285-4f7c-a237-2e5e50783685"), FacultyId = new Guid("af012788-dec9-4251-900f-502390ee325e"), Name = "Inżynieria Biomedyczna" },
                        new { Id = new Guid("6cb21264-81b0-4b9a-8ad9-d118e735c200"), FacultyId = new Guid("af012788-dec9-4251-900f-502390ee325e"), Name = "Inżynieria Materiałowa" },
                        new { Id = new Guid("22964b3f-e956-4046-b1b8-0c8cd735424d"), FacultyId = new Guid("af012788-dec9-4251-900f-502390ee325e"), Name = "Mechanika i Budowa Maszyn" },
                        new { Id = new Guid("ec19e11d-e175-49df-a6d8-5dcd03578e5f"), FacultyId = new Guid("af012788-dec9-4251-900f-502390ee325e"), Name = "Mechatronika" },
                        new { Id = new Guid("e62339b2-44d8-4c98-86ae-4a6b2fe95840"), FacultyId = new Guid("af012788-dec9-4251-900f-502390ee325e"), Name = "Zarządzanie i Inżynieria Produkcji" },
                        new { Id = new Guid("ab62cefa-0337-4a22-a9c6-d26e6f8e1241"), FacultyId = new Guid("c2faabfb-f0e9-48ce-b426-7053ae2ce515"), Name = "Elektronika i Telekomunikacja" },
                        new { Id = new Guid("b1ca3916-a120-4ab3-b2ad-22cc87f58350"), FacultyId = new Guid("c2faabfb-f0e9-48ce-b426-7053ae2ce515"), Name = "Teleinformatyka" },
                        new { Id = new Guid("82969fdd-0193-4a52-a807-83bdeabcfd54"), FacultyId = new Guid("222c0860-2013-4758-b337-419d2ab1b58a"), Name = "Automatyka i Robotyka" },
                        new { Id = new Guid("1acf338b-c695-490d-85dd-c9475c4492bd"), FacultyId = new Guid("222c0860-2013-4758-b337-419d2ab1b58a"), Name = "Elektrotechnika" },
                        new { Id = new Guid("dd511ef9-e1bd-4fde-85cf-e4981e40b7eb"), FacultyId = new Guid("222c0860-2013-4758-b337-419d2ab1b58a"), Name = "Energetyka" },
                        new { Id = new Guid("a9d25e73-dee9-4f94-9e17-ed1461bb361d"), FacultyId = new Guid("222c0860-2013-4758-b337-419d2ab1b58a"), Name = "Matematyka w Technice" },
                        new { Id = new Guid("556bb8e1-a17c-4525-a5d0-193df7260959"), FacultyId = new Guid("ccb5ef4b-9941-4160-8566-9abfc63fb79a"), Name = "Edukacja Techniczno-Informatyczna" },
                        new { Id = new Guid("7a7f0267-baa3-48f0-ac18-9f7543c5805a"), FacultyId = new Guid("ccb5ef4b-9941-4160-8566-9abfc63fb79a"), Name = "Fizyka Techniczna" },
                        new { Id = new Guid("2c3ac708-2872-471b-96ae-35bc1e2711cf"), FacultyId = new Guid("e5d3cc8f-517c-4ca9-b99d-d59e4d113955"), Name = "Informatyka" },
                        new { Id = new Guid("52fc1d5d-3c24-4237-9396-45f6ede230fb"), FacultyId = new Guid("e5d3cc8f-517c-4ca9-b99d-d59e4d113955"), Name = "Bioinformatyka" },
                        new { Id = new Guid("38346cf9-1872-472a-9da6-9cc4b9710e3c"), FacultyId = new Guid("e5d3cc8f-517c-4ca9-b99d-d59e4d113955"), Name = "Sztuczna Inteligencja / Artificial Intelligence" },
                        new { Id = new Guid("4b564ad5-10c5-40f1-a4d5-9ef07ac78e5f"), FacultyId = new Guid("734e1a76-2409-4ca7-bbe8-8611faa17a09"), Name = "Konstrukcja i Eksploatacja Środków Transportu" },
                        new { Id = new Guid("c2854f15-6b4b-47c3-91db-8c8f643d1f14"), FacultyId = new Guid("734e1a76-2409-4ca7-bbe8-8611faa17a09"), Name = "Transport" },
                        new { Id = new Guid("248191f4-c042-4f1e-9390-c7e4c3db58be"), FacultyId = new Guid("734e1a76-2409-4ca7-bbe8-8611faa17a09"), Name = "Lotnictwo i Kosmonautyka" },
                        new { Id = new Guid("3c994822-9d1a-4c65-aa70-86abfc7baca6"), FacultyId = new Guid("04ef3da7-3b4a-4062-97b2-d0b763803522"), Name = "Logistyka" },
                        new { Id = new Guid("cb275131-0c84-4e4d-bb13-b4c9206f3bb3"), FacultyId = new Guid("04ef3da7-3b4a-4062-97b2-d0b763803522"), Name = "Inżynieria Zarządzania" },
                        new { Id = new Guid("75cb1d38-c2cb-434b-9f34-6e89dc9dd7e9"), FacultyId = new Guid("04ef3da7-3b4a-4062-97b2-d0b763803522"), Name = "Inżynieria Bezpieczeństwa" },
                        new { Id = new Guid("2b72c800-0a7f-43b1-8513-0e5ea6f56c0c"), FacultyId = new Guid("f9e99240-26f1-454e-8d49-8ad990538cb7"), Name = "Inżynieria Chemiczna i Procesowa" },
                        new { Id = new Guid("a7c260bd-06a6-48f7-9eff-ee594eded52b"), FacultyId = new Guid("f9e99240-26f1-454e-8d49-8ad990538cb7"), Name = "Technologia Chemiczna / Chemical Technology" },
                        new { Id = new Guid("3500583d-003a-46fa-abd3-2d3bd9b3ac66"), FacultyId = new Guid("f9e99240-26f1-454e-8d49-8ad990538cb7"), Name = "Technologie Ochrony Środowiska" },
                        new { Id = new Guid("30dfd993-b959-475b-887d-274fcfeaf35a"), FacultyId = new Guid("f9e99240-26f1-454e-8d49-8ad990538cb7"), Name = "Inżynieria Farmaceutyczna" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new { Id = new Guid("08c4fc6e-009a-43c5-967c-aa63a58c51ba"), Name = "Wydział Architektury" },
                        new { Id = new Guid("1f25c304-5861-4906-a573-a4d79d1b4c8c"), Name = "Wydział Budownictwa i Inżynierii Środowiska" },
                        new { Id = new Guid("af012788-dec9-4251-900f-502390ee325e"), Name = "Wydział Budowy Maszyn i Zarządzania" },
                        new { Id = new Guid("c2faabfb-f0e9-48ce-b426-7053ae2ce515"), Name = "Wydział Elektroniki i Telekomunikacji" },
                        new { Id = new Guid("222c0860-2013-4758-b337-419d2ab1b58a"), Name = "Wydział Elektryczny" },
                        new { Id = new Guid("ccb5ef4b-9941-4160-8566-9abfc63fb79a"), Name = "Wydział Fizyki Technicznej" },
                        new { Id = new Guid("e5d3cc8f-517c-4ca9-b99d-d59e4d113955"), Name = "Wydział Informatyki" },
                        new { Id = new Guid("734e1a76-2409-4ca7-bbe8-8611faa17a09"), Name = "Wydział Inżynierii Transportu" },
                        new { Id = new Guid("04ef3da7-3b4a-4062-97b2-d0b763803522"), Name = "Wydział Inżynierii Zarządzania" },
                        new { Id = new Guid("f9e99240-26f1-454e-8d49-8ad990538cb7"), Name = "Wydział Technologii Chemicznej" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = new Guid("d5379a22-663c-4134-aba3-60d2cc79f3a5"), ConcurrencyStamp = "5a946d29-96d8-43eb-b3ae-5f3aefabafdd", Name = "dean", NormalizedName = "dean" },
                        new { Id = new Guid("67a4cf40-1e13-4877-bbd3-3670e183a778"), ConcurrencyStamp = "dd7a5e9c-a136-4233-bb1f-80f8bf8419f2", Name = "student", NormalizedName = "student" },
                        new { Id = new Guid("a91a3f43-9477-4f0a-8498-c8672923f138"), ConcurrencyStamp = "702d1852-2864-4232-9fa7-3231f5bc076a", Name = "promoter", NormalizedName = "promoter" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new { Id = new Guid("02029c65-f97d-4ba7-b16f-7e8d774a0e18"), RoleId = new Guid("d5379a22-663c-4134-aba3-60d2cc79f3a5"), UserId = new Guid("d702bd1f-459f-4140-95b4-a29d4ba0dde5") },
                        new { Id = new Guid("3e51c688-1f21-43f4-81c3-abb582b646c3"), RoleId = new Guid("d5379a22-663c-4134-aba3-60d2cc79f3a5"), UserId = new Guid("fda9e2ea-6b1c-4bca-944c-49e74c819b65") },
                        new { Id = new Guid("5fba2b9f-12c5-4fba-a314-a232d551f651"), RoleId = new Guid("d5379a22-663c-4134-aba3-60d2cc79f3a5"), UserId = new Guid("f2fd7508-2248-4391-a0fb-59234e9c4337") },
                        new { Id = new Guid("c0a8786a-c67a-43ba-a11b-07592b26ac6e"), RoleId = new Guid("d5379a22-663c-4134-aba3-60d2cc79f3a5"), UserId = new Guid("403d6b6d-d8ef-4430-8fd9-5d292f7addcb") },
                        new { Id = new Guid("62dca98b-be35-4664-b573-8804e59b677f"), RoleId = new Guid("67a4cf40-1e13-4877-bbd3-3670e183a778"), UserId = new Guid("fb98b6f6-24be-4078-ba22-b32e3dfb1b68") },
                        new { Id = new Guid("b432d759-20de-4c76-8b27-ff63eb580712"), RoleId = new Guid("67a4cf40-1e13-4877-bbd3-3670e183a778"), UserId = new Guid("0da38c85-8000-419e-98e3-3cdf7617aaab") },
                        new { Id = new Guid("8865ec19-2d00-408d-b031-4876d0f6ee1f"), RoleId = new Guid("67a4cf40-1e13-4877-bbd3-3670e183a778"), UserId = new Guid("2c91f190-878d-41a1-9f9a-9e7bd5ed1452") },
                        new { Id = new Guid("fdcf21d8-d2da-40b0-8247-72d9e767216c"), RoleId = new Guid("67a4cf40-1e13-4877-bbd3-3670e183a778"), UserId = new Guid("0d1bc62c-872f-4e02-9c0a-a6ec4d8d809c") },
                        new { Id = new Guid("fa055ee1-4fe9-4d2a-8742-f5d58ea0629e"), RoleId = new Guid("a91a3f43-9477-4f0a-8498-c8672923f138"), UserId = new Guid("4628dbfc-d432-4420-9100-4270e4df9775") },
                        new { Id = new Guid("8d568f39-018b-49de-9cb2-659ffd89cfd9"), RoleId = new Guid("a91a3f43-9477-4f0a-8498-c8672923f138"), UserId = new Guid("1a9932c1-4206-4a4c-a8d2-8b33b5c9ae6a") },
                        new { Id = new Guid("d9831fa6-f646-4c2a-b09d-ec2657768eaf"), RoleId = new Guid("a91a3f43-9477-4f0a-8498-c8672923f138"), UserId = new Guid("201143b3-3b2d-410e-aa3e-440fbd8b27a9") },
                        new { Id = new Guid("df9c9f1b-3cf1-4bff-812b-c25a87454b6d"), RoleId = new Guid("a91a3f43-9477-4f0a-8498-c8672923f138"), UserId = new Guid("1412a329-f80f-497b-81bd-c9853bd4ce23") },
                        new { Id = new Guid("89d8a495-911e-4053-9fd5-9595934387f9"), RoleId = new Guid("a91a3f43-9477-4f0a-8498-c8672923f138"), UserId = new Guid("0213fb55-b8a9-467d-bfc4-3fac8729a478") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("d702bd1f-459f-4140-95b4-a29d4ba0dde5"), AccessFailedCount = 0, ConcurrencyStamp = "4eb767a9-baeb-4dce-8879-b908edbccd87", Email = "dean1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN1@GMAIL.COM", NormalizedUserName = "DEAN1@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEMq2v2n0lyU1A1judr8wqKKYIp8hFJCKrAvhwsEeV/aR9RzRHJWrPHCUFrhnHgaUnw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean1@gmail.com" },
                        new { Id = new Guid("fda9e2ea-6b1c-4bca-944c-49e74c819b65"), AccessFailedCount = 0, ConcurrencyStamp = "15558786-4753-446f-9ee7-541390ca511a", Email = "dean2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN2@GMAIL.COM", NormalizedUserName = "DEAN2@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAENLRhhHeHOHoOwXoidys/7V8dX4d3HoL24Nr8IzJ6gwmfGR16ZcFYZoYD4rTP4ZR8g==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean2@gmail.com" },
                        new { Id = new Guid("f2fd7508-2248-4391-a0fb-59234e9c4337"), AccessFailedCount = 0, ConcurrencyStamp = "033d2f19-561f-4d6d-a3e4-14e12221041e", Email = "dean3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN3@GMAIL.COM", NormalizedUserName = "DEAN3@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEJldpEoRmMM5ld7XoEPS7NRVJwesT+ikoY0wMlS+obTYLUvR4D4TgU8oZgHeavoNmg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean3@gmail.com" },
                        new { Id = new Guid("403d6b6d-d8ef-4430-8fd9-5d292f7addcb"), AccessFailedCount = 0, ConcurrencyStamp = "7123a768-8e16-4b3f-92ee-dbe8be359cde", Email = "dean4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "DEAN4@GMAIL.COM", NormalizedUserName = "DEAN4@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAECZ6/wiwQX2LPtotaHKqzo7TGIo49cA0tqZvGeJKAOG54bGeit9khDUIJq1uhNhBTA==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean4@gmail.com" },
                        new { Id = new Guid("fb98b6f6-24be-4078-ba22-b32e3dfb1b68"), AccessFailedCount = 0, ConcurrencyStamp = "6d5676a5-4393-4a00-883f-0d2853e92258", Email = "student1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT1@GMAIL.COM", NormalizedUserName = "STUDENT1@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEAZ+PYCqsrdvSdmniq0Q6GqiqDJMvmm0aeeO/367BMZ3FlADkhWSHLs6P56ZAUCd7g==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student1@gmail.com" },
                        new { Id = new Guid("0da38c85-8000-419e-98e3-3cdf7617aaab"), AccessFailedCount = 0, ConcurrencyStamp = "927a83ff-7034-455f-8e7a-a820fac2412d", Email = "student2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT2@GMAIL.COM", NormalizedUserName = "STUDENT2@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEAh2kESQSTj9gINVW1FHtCrrBpUUZrX9q3lZjpBLBadXkKkzHtrD5G5bpfMw/x4ZBQ==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student2@gmail.com" },
                        new { Id = new Guid("2c91f190-878d-41a1-9f9a-9e7bd5ed1452"), AccessFailedCount = 0, ConcurrencyStamp = "56fdc065-4662-4cac-95e7-fbcf201ad542", Email = "student3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT3@GMAIL.COM", NormalizedUserName = "STUDENT3@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEJPSYeRUFKX7wXbPXF4JhVYhSp9uX95Qe12dY3hoDbj1RNWMNW2/bcnFZISQ3dw04Q==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student3@gmail.com" },
                        new { Id = new Guid("0d1bc62c-872f-4e02-9c0a-a6ec4d8d809c"), AccessFailedCount = 0, ConcurrencyStamp = "868995bd-86fa-47e2-8a52-1b4406115d91", Email = "student4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "STUDENT4@GMAIL.COM", NormalizedUserName = "STUDENT4@GMAIL.COM", PasswordHash = "AQAAAAEAACcQAAAAEB9hX3kEXwvav2tNKQJpLgcIxCJQM0p1gaE/6XpqtFBjAS9PYXbJXhmlARElhamTFg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student4@gmail.com" },
                        new { Id = new Guid("4628dbfc-d432-4420-9100-4270e4df9775"), AccessFailedCount = 0, ConcurrencyStamp = "32196c2c-f1d8-4b3b-99ea-3c7f5c3dae31", Email = "irmina.maslowska@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "IRMINA.MASLOWSKA@PUT.POZNAN.PL", NormalizedUserName = "IRMINA.MASLOWSKA@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEJPs/WIq+MjesWqNFuKqc790pDZxSaLEFayqKwac6kWUccrEu9abFgpKvxehvIK5Ww==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "irmina.maslowska@put.poznan.pl" },
                        new { Id = new Guid("1a9932c1-4206-4a4c-a8d2-8b33b5c9ae6a"), AccessFailedCount = 0, ConcurrencyStamp = "77929642-bd0e-4357-b3d6-e41efe073d19", Email = "bartlomiej.predki@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "BARTLOMIEJ.PREDKI@PUT.POZNAN.PL", NormalizedUserName = "BARTLOMIEJ.PREDKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEOK6M28j86w1pVzF3SLOSu56Iw0iEpOnfJCFLIIMMXJgNpIT98XrVp0KzIQSCyZD/g==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "bartlomiej.predki@put.poznan.pl" },
                        new { Id = new Guid("201143b3-3b2d-410e-aa3e-440fbd8b27a9"), AccessFailedCount = 0, ConcurrencyStamp = "592d0537-cd2f-4d1d-8f50-41c902a0c418", Email = "milosz.kadzinski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "MILOSZ.KADZINSKI@PUT.POZNAN.PL", NormalizedUserName = "MILOSZ.KADZINSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEGDQDuPmuRpwuON3X85PJWk+YWQfEcsjQCfm6c9Ai5QneZQndy+5mnA3R0/Z6/HM0Q==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "milosz.kadzinski@put.poznan.pl" },
                        new { Id = new Guid("1412a329-f80f-497b-81bd-c9853bd4ce23"), AccessFailedCount = 0, ConcurrencyStamp = "55c00089-cf92-42d0-8cd0-98a28dc32964", Email = "wojciech.kotlowski@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "WOJCIECH.KOTLOWSKI@PUT.POZNAN.PL", NormalizedUserName = "WOJCIECH.KOTLOWSKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEP6NDfclRCigk1hIh6uiQ+56Y5cudXyXIATye3aOpMRYsud1u421TeFme0+g/Y/iVg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "wojciech.kotlowski@put.poznan.pl" },
                        new { Id = new Guid("0213fb55-b8a9-467d-bfc4-3fac8729a478"), AccessFailedCount = 0, ConcurrencyStamp = "0410d47d-6363-4ecf-80a7-82b4ec4cf171", Email = "jerzy.nawrocki@put.poznan.pl", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "JERZY.NAWROCKI@PUT.POZNAN.PL", NormalizedUserName = "JERZY.NAWROCKI@PUT.POZNAN.PL", PasswordHash = "AQAAAAEAACcQAAAAEJor0zXZaCsR2s332qb9Ky09QWH/yVIlrifjJzzpXFIuFy0ll1I999ZBwvjOYID2Mg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "jerzy.nawrocki@put.poznan.pl" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Institute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Institutes");

                    b.HasData(
                        new { Id = new Guid("538c5043-ff3a-458d-8229-0134e6f5495e"), Name = "Instytut Informatyki" },
                        new { Id = new Guid("077e0480-8d05-466c-acd1-e9eed3655cd6"), Name = "Instytut Technologii Mechanicznej" },
                        new { Id = new Guid("148c87f5-b37a-471e-922f-3d223b056eca"), Name = "Instytut Matematyki" },
                        new { Id = new Guid("e5eabff5-b12f-4ec0-8bfd-66f0040575d2"), Name = "Instytut Technologii Materiałów" },
                        new { Id = new Guid("c324803d-de2d-4e58-9e5e-e31914fba986"), Name = "Instytut Inżynierii Lądowej" },
                        new { Id = new Guid("f8faf28c-ed29-4ea8-91ea-58a7056b0755"), Name = "Instytut Inżynierii Środowiska" },
                        new { Id = new Guid("a2b033ab-efe0-4477-bc84-bca991d77aea"), Name = "Instytut Chemii i Elektrochemii Technicznej" },
                        new { Id = new Guid("ae727cd0-a500-408d-9306-9c8b01755594"), Name = "Instytut Elektrotechniki i Elektroniki Przemysłowej" },
                        new { Id = new Guid("da42bd0c-e0d8-4aac-9adc-b831a600afc5"), Name = "Instytut Mechaniki Stosowanej" },
                        new { Id = new Guid("ca22d5ff-1c94-4686-b928-cf45fbc1e7a8"), Name = "Instytut Technologii i Inżynierii Chemicznej" },
                        new { Id = new Guid("df13cc18-7420-4ebe-8183-efe1eb085b7d"), Name = "Instytut Architektury i Planowania Przestrzennego" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ExpectedNumberOfBachelorProposals");

                    b.Property<int>("ExpectedNumberOfMasterProposals");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<Guid>("InstituteId");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("TitlePostfix");

                    b.Property<string>("TitlePrefix")
                        .IsRequired();

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("InstituteId");

                    b.HasIndex("UserId");

                    b.ToTable("Promoters");

                    b.HasData(
                        new { Id = new Guid("2a21d8e5-575a-41d9-99ed-fbb5c06a3db9"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Irmina", InstituteId = new Guid("538c5043-ff3a-458d-8229-0134e6f5495e"), LastName = "Masłowska", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("4628dbfc-d432-4420-9100-4270e4df9775") },
                        new { Id = new Guid("d979fc9c-94d3-419a-a4e9-014e5664b73c"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Bartłomiej", InstituteId = new Guid("538c5043-ff3a-458d-8229-0134e6f5495e"), LastName = "Prędki", TitlePostfix = "", TitlePrefix = "dr inż.", UserId = new Guid("1a9932c1-4206-4a4c-a8d2-8b33b5c9ae6a") },
                        new { Id = new Guid("4ae4e691-dcff-4236-94ca-c97c102bc66c"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Miłosz", InstituteId = new Guid("538c5043-ff3a-458d-8229-0134e6f5495e"), LastName = "Kadziński", TitlePostfix = "", TitlePrefix = "dr hab. inż.", UserId = new Guid("201143b3-3b2d-410e-aa3e-440fbd8b27a9") },
                        new { Id = new Guid("9aabdabd-8d1b-4c38-a2d0-0f88dca17533"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Wojciech", InstituteId = new Guid("538c5043-ff3a-458d-8229-0134e6f5495e"), LastName = "Kotłowski", TitlePostfix = "", TitlePrefix = "dr hab. inż.", UserId = new Guid("1412a329-f80f-497b-81bd-c9853bd4ce23") },
                        new { Id = new Guid("48aea09b-4be3-4372-88bc-d46d78a1552b"), ExpectedNumberOfBachelorProposals = 2, ExpectedNumberOfMasterProposals = 1, FirstName = "Jerzy", InstituteId = new Guid("538c5043-ff3a-458d-8229-0134e6f5495e"), LastName = "Nawrocki", TitlePostfix = "prof. PP", TitlePrefix = "dr hab inż.", UserId = new Guid("0213fb55-b8a9-467d-bfc4-3fac8729a478") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CourseId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Level");

                    b.Property<int>("Mode");

                    b.Property<Guid>("PromoterId");

                    b.Property<string>("Specialization");

                    b.Property<DateTime>("StartingDate");

                    b.Property<int>("Status");

                    b.Property<int>("StudyProfile");

                    b.Property<string>("TopicEnglish")
                        .IsRequired();

                    b.Property<string>("TopicPolish")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PromoterId");

                    b.ToTable("Proposals");

                    b.HasData(
                        new { Id = new Guid("ded94cc1-ced9-4f36-b7a5-fa4ff57e32d2"), CourseId = new Guid("2c3ac708-2872-471b-96ae-35bc1e2711cf"), Description = "Opis.....", Level = 0, Mode = 0, PromoterId = new Guid("48aea09b-4be3-4372-88bc-d46d78a1552b"), Specialization = "Opis.......", StartingDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Capri 2 - system for managing diploma topic cards", TopicPolish = "Capri 2 - system do zarządzania kartami tematów prac dyplomowych" },
                        new { Id = new Guid("f1786112-584c-4e3a-ab29-3869d52c9b93"), CourseId = new Guid("2c3ac708-2872-471b-96ae-35bc1e2711cf"), Description = "Celem pracy jest zaimplementowanie metod Electre 1s i Electre TRI jako aplikacji desktopowych.....", Level = 0, Mode = 0, PromoterId = new Guid("2a21d8e5-575a-41d9-99ed-fbb5c06a3db9"), Specialization = "....................................", StartingDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Implementation of chosen methods from Electre family", TopicPolish = "Implementacja wybranych metod z rodziny Electre" },
                        new { Id = new Guid("4e088708-d738-4430-9fa2-815f6c2b3add"), CourseId = new Guid("2c3ac708-2872-471b-96ae-35bc1e2711cf"), Description = "Opis.....", Level = 0, Mode = 0, PromoterId = new Guid("d979fc9c-94d3-419a-a4e9-014e5664b73c"), Specialization = "Opis.......", StartingDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Implementation of decision support methods based on utility function (UTA, Assess)", TopicPolish = "Implementacja metod wspomagania decyzji opartych na funkcji użyteczności (UTA, Assess)" },
                        new { Id = new Guid("5a219471-18ca-4145-b58d-fea3f5b2e610"), CourseId = new Guid("2c3ac708-2872-471b-96ae-35bc1e2711cf"), Description = "Opis.....", Level = 0, Mode = 0, PromoterId = new Guid("4ae4e691-dcff-4236-94ca-c97c102bc66c"), Specialization = "Opis.......", StartingDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Extension of diviz platform", TopicPolish = "Rozszerzenie platformy diviz o metody wielokryterialnego wspomagania decyzji oparte na różnych modelach preferencji" },
                        new { Id = new Guid("99b1e5ac-c32b-422d-a46d-41b091b38f41"), CourseId = new Guid("2c3ac708-2872-471b-96ae-35bc1e2711cf"), Description = "Opis.....", Level = 0, Mode = 0, PromoterId = new Guid("9aabdabd-8d1b-4c38-a2d0-0f88dca17533"), Specialization = "Opis.......", StartingDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, StudyProfile = 0, TopicEnglish = "Style transfering using a neural network", TopicPolish = "Transfer stylu przy użyciu sieci neuronowej" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ProposalId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new { Id = new Guid("7db0688d-fc48-400a-9b8b-c1fc4ed648f2"), UserId = new Guid("fb98b6f6-24be-4078-ba22-b32e3dfb1b68") },
                        new { Id = new Guid("b97bdc29-661f-4c86-9aa5-663af9df34cf"), UserId = new Guid("0da38c85-8000-419e-98e3-3cdf7617aaab") },
                        new { Id = new Guid("ba8b5281-0a1d-42f7-9dea-b99f978c8680"), UserId = new Guid("2c91f190-878d-41a1-9f9a-9e7bd5ed1452") },
                        new { Id = new Guid("5c3507a8-c29e-450c-8dfc-9c160d205bcb"), UserId = new Guid("0d1bc62c-872f-4e02-9c0a-a6ec4d8d809c") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Course", b =>
                {
                    b.HasOne("Capri.Database.Entities.Faculty", "Faculty")
                        .WithMany("Courses")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.HasOne("Capri.Database.Entities.Institute", "Institute")
                        .WithMany("Promoters")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.HasOne("Capri.Database.Entities.Course", "Course")
                        .WithMany("Proposals")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Capri.Database.Entities.Promoter", "Promoter")
                        .WithMany("Proposals")
                        .HasForeignKey("PromoterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.HasOne("Capri.Database.Entities.Proposal")
                        .WithMany("Students")
                        .HasForeignKey("ProposalId");

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
