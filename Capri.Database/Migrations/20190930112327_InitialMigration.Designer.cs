// <auto-generated />
using System;
using Capri.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Capri.Database.Migrations
{
    [DbContext(typeof(CapriDbContext))]
    [Migration("20190930112327_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedName");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new { Id = new Guid("5933c8bb-6094-49cc-9313-6b784a820c1e"), ConcurrencyStamp = "c1718cd9-c480-494f-b5f2-03ade3a7a474", Name = "admin", NormalizedName = "admin" },
                        new { Id = new Guid("756f25fc-0dc8-4893-b1cd-96aef6baa645"), ConcurrencyStamp = "29c07907-6221-475a-b705-182fb7a89713", Name = "dean", NormalizedName = "dean" },
                        new { Id = new Guid("1fdd44c4-37fb-4302-88b8-7ff29d7f205d"), ConcurrencyStamp = "cded1c98-6b49-4ca1-a64f-0cb1c7f21ef5", Name = "student", NormalizedName = "student" },
                        new { Id = new Guid("acce96ec-bcb9-44c1-b6a5-99a67803bd30"), ConcurrencyStamp = "8cafe5da-7928-4187-8519-1b6c25914443", Name = "promoter", NormalizedName = "promoter" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("ProviderKey");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("RoleId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new { Id = new Guid("215cfeb4-ea0e-4e12-b1c7-9fba18d04ecb"), RoleId = new Guid("5933c8bb-6094-49cc-9313-6b784a820c1e"), UserId = new Guid("3b7bc181-a375-47ff-8b49-43c78f25137d") },
                        new { Id = new Guid("2f483a0f-8c82-42a1-94ae-7525377e5337"), RoleId = new Guid("756f25fc-0dc8-4893-b1cd-96aef6baa645"), UserId = new Guid("018dea98-9c46-4995-850b-407ffdef4e92") },
                        new { Id = new Guid("8e8a4d66-05a0-4b16-8005-b2e2145024da"), RoleId = new Guid("756f25fc-0dc8-4893-b1cd-96aef6baa645"), UserId = new Guid("19d6e93e-d674-4e9c-812e-8889f6125248") },
                        new { Id = new Guid("4e485017-3be6-45de-a86e-d737a70ad675"), RoleId = new Guid("1fdd44c4-37fb-4302-88b8-7ff29d7f205d"), UserId = new Guid("5382ad90-7ee3-421c-af3b-22a5ae4f1303") },
                        new { Id = new Guid("dea94d3e-8571-480f-a915-3ce2936faec8"), RoleId = new Guid("1fdd44c4-37fb-4302-88b8-7ff29d7f205d"), UserId = new Guid("3a373b54-007f-482b-a147-37d692e63c8c") },
                        new { Id = new Guid("dda29efe-66fd-4bc5-8058-8b63ce7e5a7f"), RoleId = new Guid("1fdd44c4-37fb-4302-88b8-7ff29d7f205d"), UserId = new Guid("e2d7b9f1-9e76-4910-b1b5-16e16a8a8383") },
                        new { Id = new Guid("503ad0ab-60fb-4540-882c-67206b6d46b3"), RoleId = new Guid("1fdd44c4-37fb-4302-88b8-7ff29d7f205d"), UserId = new Guid("767eb583-513d-455e-b586-6910127c49c5") },
                        new { Id = new Guid("4b503ff0-5123-4624-a841-d7d2076c91c9"), RoleId = new Guid("1fdd44c4-37fb-4302-88b8-7ff29d7f205d"), UserId = new Guid("8e1fc3de-e849-42fe-8c4e-918f8942263c") },
                        new { Id = new Guid("7fd66867-5801-470c-825e-d12876c470f9"), RoleId = new Guid("1fdd44c4-37fb-4302-88b8-7ff29d7f205d"), UserId = new Guid("f9f25735-14c0-4e64-92c0-c2763d77b99e") },
                        new { Id = new Guid("4fa33943-39e7-4412-ad02-75ea1e764b8b"), RoleId = new Guid("1fdd44c4-37fb-4302-88b8-7ff29d7f205d"), UserId = new Guid("11315ff8-6bc5-4eba-b95a-00420e822330") },
                        new { Id = new Guid("121a1a2c-90ab-4a89-94b4-5cbf78c519f0"), RoleId = new Guid("1fdd44c4-37fb-4302-88b8-7ff29d7f205d"), UserId = new Guid("ba730cd3-13eb-42a0-bcd5-23c321cfe300") },
                        new { Id = new Guid("81833620-9b63-4d9c-8852-8fcf78a53e4d"), RoleId = new Guid("acce96ec-bcb9-44c1-b6a5-99a67803bd30"), UserId = new Guid("90426b18-c881-424d-97b2-11fd0d232ad6") },
                        new { Id = new Guid("f1811b5c-2f7a-4176-a762-4be1a6e47b14"), RoleId = new Guid("acce96ec-bcb9-44c1-b6a5-99a67803bd30"), UserId = new Guid("5cc5d319-2d46-44ed-95eb-aae8a0d85bf5") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.GuidUserToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Capri.Database.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = new Guid("3b7bc181-a375-47ff-8b49-43c78f25137d"), AccessFailedCount = 0, ConcurrencyStamp = "7a8c3498-a54b-482f-be2e-a7dd8b0ff3e6", Email = "admin1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "admin1@gmail.com", NormalizedUserName = "admin1@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEE9XzU3yahak5pgbPscgb8zxHBICkOGA5JMB0egeM63e0gMjJREfuogrwhaf/OLd6w==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "admin1@gmail.com" },
                        new { Id = new Guid("018dea98-9c46-4995-850b-407ffdef4e92"), AccessFailedCount = 0, ConcurrencyStamp = "77fe6514-c7a1-431a-a874-34e63163a2a3", Email = "dean1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "dean1@gmail.com", NormalizedUserName = "dean1@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEBRB/5OBOW+HbQgdDIPP4pdqDrxM0CD3+jvIj/WMqztuMjBF6mN29uwJjgHUMuAkUg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean1@gmail.com" },
                        new { Id = new Guid("19d6e93e-d674-4e9c-812e-8889f6125248"), AccessFailedCount = 0, ConcurrencyStamp = "fef98029-9662-4294-93ae-0e8845f9881e", Email = "dean2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "dean2@gmail.com", NormalizedUserName = "dean2@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEMlKgNutDU1j9Err5exojPcm3sTvAlDbx3jg2oWJ41ALPn8+ftaRvT7TkWuTgMj0Tw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "dean2@gmail.com" },
                        new { Id = new Guid("5382ad90-7ee3-421c-af3b-22a5ae4f1303"), AccessFailedCount = 0, ConcurrencyStamp = "335e65c4-1b2e-4ef9-be3e-b2e0a6f01a17", Email = "student1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student1@gmail.com", NormalizedUserName = "student1@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEB4+Dvq5gXcfo5gML3Lwb1D5jWz/a8C8DfDZr+j51zYNhzMk50wmkXfRG3L6gs8ErA==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student1@gmail.com" },
                        new { Id = new Guid("3a373b54-007f-482b-a147-37d692e63c8c"), AccessFailedCount = 0, ConcurrencyStamp = "4c68e1f2-71e4-400d-8c76-ba17182d384b", Email = "student2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student2@gmail.com", NormalizedUserName = "student2@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAED2xnpOYFnMufIpFWyhFg2rrsPAlCF682ltqXBG1o6oW51YzjR1iadC+anJfPXfvkA==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student2@gmail.com" },
                        new { Id = new Guid("e2d7b9f1-9e76-4910-b1b5-16e16a8a8383"), AccessFailedCount = 0, ConcurrencyStamp = "1059373d-2949-4e1e-ada4-2c74f8b8f03b", Email = "student3@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student3@gmail.com", NormalizedUserName = "student3@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEGHQE3CjfqmjTo26jfpxU45TpCIoflXbeymMNUK2RkJNs2AKUlBRC3e+5TSyhNoPIg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student3@gmail.com" },
                        new { Id = new Guid("767eb583-513d-455e-b586-6910127c49c5"), AccessFailedCount = 0, ConcurrencyStamp = "edb90797-9451-4e65-9413-8bced1d67d5b", Email = "student4@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student4@gmail.com", NormalizedUserName = "student4@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEKama54Yqxfcc2o8wWIPu5zOdeXjwYlklyGEjkQXNSlysbuLqnMbASkNsYA6E2RIaw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student4@gmail.com" },
                        new { Id = new Guid("8e1fc3de-e849-42fe-8c4e-918f8942263c"), AccessFailedCount = 0, ConcurrencyStamp = "9833219d-5d3d-4a0b-90ec-572d74dc1dda", Email = "student5@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student5@gmail.com", NormalizedUserName = "student5@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEMR2zXezp+z7AVR38GdRCh2u6UqLBTeYlwPIkVjL8LaswDFyAWFTnrIAh1W/jTJURw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student5@gmail.com" },
                        new { Id = new Guid("f9f25735-14c0-4e64-92c0-c2763d77b99e"), AccessFailedCount = 0, ConcurrencyStamp = "35ae3ac3-abcf-498c-bef0-e1ba846c81e4", Email = "student6@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student6@gmail.com", NormalizedUserName = "student6@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEPAI6nds8MRLGb/aRu0WRer0ij7pYYWUzRc3wWLJ69a7nHuARazuVd2T6exB10Epvg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student6@gmail.com" },
                        new { Id = new Guid("11315ff8-6bc5-4eba-b95a-00420e822330"), AccessFailedCount = 0, ConcurrencyStamp = "f44dbd55-32b6-463b-915e-b882d171773f", Email = "student7@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student7@gmail.com", NormalizedUserName = "student7@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEP0yu+NtTH/Y3TdKIWkUq0zhmOu8ISvrMFY4oLmReoXAKbc7FWEFUyIhsAnWPP+GAg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student7@gmail.com" },
                        new { Id = new Guid("ba730cd3-13eb-42a0-bcd5-23c321cfe300"), AccessFailedCount = 0, ConcurrencyStamp = "7f6cf40c-5ea5-46be-bbe8-df22df7fea14", Email = "student8@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "student8@gmail.com", NormalizedUserName = "student8@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEJdSjHZwCRgzcGGWcTxqxkMbkTM62MKBvTkG83widrtQiBRGE9OuukuU87ylSBcsxg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "student8@gmail.com" },
                        new { Id = new Guid("90426b18-c881-424d-97b2-11fd0d232ad6"), AccessFailedCount = 0, ConcurrencyStamp = "553c8710-f755-4808-bc53-302bebd2c8d3", Email = "promoter1@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "promoter1@gmail.com", NormalizedUserName = "promoter1@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEIx2g5cR+lyQDwNw3qUst8LLPaEBewUCIB/kdYqEFgL00q3Txm6vPWZcFVQaaqvwfw==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "promoter1@gmail.com" },
                        new { Id = new Guid("5cc5d319-2d46-44ed-95eb-aae8a0d85bf5"), AccessFailedCount = 0, ConcurrencyStamp = "e8a67764-da82-41ea-a53e-521eb2e48c12", Email = "promoter2@gmail.com", EmailConfirmed = true, LockoutEnabled = false, NormalizedEmail = "promoter2@gmail.com", NormalizedUserName = "promoter2@gmail.com", PasswordHash = "AQAAAAEAACcQAAAAEDdTdDrG3v/nr9QpNH/a7fsYM6URMZ96uda+QZJnwvbFnMvc5K8DdawGj79szIqXXg==", PhoneNumberConfirmed = false, SecurityStamp = "", TwoFactorEnabled = false, UserName = "promoter2@gmail.com" }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanSubmitBachelorProposals");

                    b.Property<bool>("CanSubmitMasterProposals");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Promoters");

                    b.HasData(
                        new { Id = new Guid("3ecad404-b35d-4160-8d7b-afbc4b9b473b"), CanSubmitBachelorProposals = true, CanSubmitMasterProposals = true, UserId = new Guid("90426b18-c881-424d-97b2-11fd0d232ad6") },
                        new { Id = new Guid("46788cfe-7558-4bd0-8d90-90b124fecdb0"), CanSubmitBachelorProposals = true, CanSubmitMasterProposals = true, UserId = new Guid("5cc5d319-2d46-44ed-95eb-aae8a0d85bf5") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid?>("PromoterId");

                    b.Property<int>("Status");

                    b.Property<string>("Topic")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("PromoterId");

                    b.ToTable("Proposals");
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ProposalId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProposalId");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new { Id = new Guid("cf171f9e-9144-4555-a480-974a38d93d64"), UserId = new Guid("5382ad90-7ee3-421c-af3b-22a5ae4f1303") },
                        new { Id = new Guid("32e3abad-f107-4785-8f81-59a13d64440e"), UserId = new Guid("3a373b54-007f-482b-a147-37d692e63c8c") },
                        new { Id = new Guid("184f7e51-16e0-4662-abd0-b8be24ba7a9b"), UserId = new Guid("e2d7b9f1-9e76-4910-b1b5-16e16a8a8383") },
                        new { Id = new Guid("07126f80-a1e7-4217-ad3f-c341fa95ca0a"), UserId = new Guid("767eb583-513d-455e-b586-6910127c49c5") },
                        new { Id = new Guid("e6b41e22-a91e-463f-809b-5544e603cb24"), UserId = new Guid("8e1fc3de-e849-42fe-8c4e-918f8942263c") },
                        new { Id = new Guid("99b9215c-09bb-4cbe-bb13-13bac0a148a8"), UserId = new Guid("f9f25735-14c0-4e64-92c0-c2763d77b99e") },
                        new { Id = new Guid("6e15357d-8e42-4bce-a569-d41ee954111f"), UserId = new Guid("11315ff8-6bc5-4eba-b95a-00420e822330") },
                        new { Id = new Guid("5c15c981-b479-4231-bb61-7238b63d48c2"), UserId = new Guid("ba730cd3-13eb-42a0-bcd5-23c321cfe300") }
                    );
                });

            modelBuilder.Entity("Capri.Database.Entities.Promoter", b =>
                {
                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Capri.Database.Entities.Proposal", b =>
                {
                    b.HasOne("Capri.Database.Entities.Promoter")
                        .WithMany("Proposals")
                        .HasForeignKey("PromoterId");
                });

            modelBuilder.Entity("Capri.Database.Entities.Student", b =>
                {
                    b.HasOne("Capri.Database.Entities.Proposal")
                        .WithMany("Students")
                        .HasForeignKey("ProposalId");

                    b.HasOne("Capri.Database.Entities.Identity.User", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
